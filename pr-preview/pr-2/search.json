[
  {
    "objectID": "ghg-center-at-ams-2024.html",
    "href": "ghg-center-at-ams-2024.html",
    "title": "The US GHG Center at American Meteorological Society Annual Meeting 2024",
    "section": "",
    "text": "Join members of the GHG Center team for several events at the 2024 AMS Annual Meeting at Baltimore, Maryland; January 28th - February 1st"
  },
  {
    "objectID": "ghg-center-at-ams-2024.html#short-course",
    "href": "ghg-center-at-ams-2024.html#short-course",
    "title": "The US GHG Center at American Meteorological Society Annual Meeting 2024",
    "section": "Short Course",
    "text": "Short Course\nAdvancing Open Science: An Interactive Workshop on Harnessing VEDA for Earth Science Research at the U.S. Greenhouse Gas Center\nüìÖ Jan 28, 2024, üï£ 8:00 AM - 3:45 PM EST, üìç Baltimore Convention Center\nLearn how to effectively analyze and visualize Earth science data in the cloud using open-source tools and datasets [Jan 28, room ]."
  },
  {
    "objectID": "ghg-center-at-ams-2024.html#town-hall",
    "href": "ghg-center-at-ams-2024.html#town-hall",
    "title": "The US GHG Center at American Meteorological Society Annual Meeting 2024",
    "section": "Town Hall",
    "text": "Town Hall\nU.S. Greenhouse Gas Center: Listening Session.\nüìÖ Jan 30, 2024, üï£ 12:25 PM - 1:15 PM EST, üìç Holiday 5, Hilton Baltimore Inner Harbor\nCome share your thoughts and see a demonstration of the US GHG Center. Upcoming developments and opportunities will be presented. [Jan 30, room Holiday 5 at Hilton Baltimore Inner Harbor]."
  },
  {
    "objectID": "ghg-center-at-ams-2024.html#presentations",
    "href": "ghg-center-at-ams-2024.html#presentations",
    "title": "The US GHG Center at American Meteorological Society Annual Meeting 2024",
    "section": "Presentations",
    "text": "Presentations\nMultiple presentations by GHG Center team members will occur throughout the week. Stop by to hear more from GHG Center team members!\n\n\n\n\n\n\n\n\n\nWhen\nRoom\nPresentation Title\n\n\n\n\nTues, Jan 30 4:45\nHoliday 5\nHilton Baltimore Inner Harbor\n8A.2 Stakeholder Engagement for the US Greenhouse Gas Center (Combley)\n\n\nMon, Jan 29 5:15\n336\nThe Baltimore Convention Center\nJ4B.4 Developing a Cross-Institutional Open-Source Cyberinfrastructure to Explore, Analyze, and Communicate Greenhouse Gas Data and Information (Chaudhary)\n\n\nTues, Jan 30 5:15\nBallroom II\nThe Baltimore Convention Center\nJ8A.4 PPAP‚Äôs and NIST‚Äôs Urban Greenhouse Gas Measurements Program (Whetstone)\n\n\nWed, Jan 31 5:30\nHoliday 5\nHilton Baltimore Inner Harbor\n12A.5 NIST‚Äôs Urban Greenhouse Gas Measurements Program and Interactions with NOAA‚Äôs Air Resources Laboratory (Whetstone)\n\n\nMon, Jan 29 11:30\n321/322\nThe Baltimore Convention Center\n2B.4 Methane and Carbon Dioxide Point Source Measurements Across Six Continents from the EMIT Imaging Spectrometer on the International Space Station - and Contributions to the U.S. Greenhouse Gas Center (Green)\n\n\nMon, Jan 29 5:30\n321/322\nThe Baltimore Convention Center\n4B.5 Detectability of Anthropogenic Impacts on Terrestrial Carbon Storage through Space Based Greenhouse Gas Observations (Weir)\n\n\nThur, Feb 1 2:30\nHoliday 4\nHilton Baltimore Inner Harbor\nJ15.4 NOAA Carbon Monitoring, Research and Innovation: Long-Standing Foundation to Support Climate Mitigation (Grubi≈°iƒá)"
  },
  {
    "objectID": "intro-us-ghg-center/index.html",
    "href": "intro-us-ghg-center/index.html",
    "title": "Introduction to US GHG Center",
    "section": "",
    "text": "Introduction to US GHG Center"
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/index.html",
    "href": "interactive-session-1-epa-gridded-methane-emissions/index.html",
    "title": "EPA Gridded Methane Emissions Inventory",
    "section": "",
    "text": "EPA Gridded Methane Emissions Inventory"
  },
  {
    "objectID": "speakers.html",
    "href": "speakers.html",
    "title": "Speakers",
    "section": "",
    "text": "Argie Kavvada (HQ)\nShanna Combley (HQ)\nLesley Ott (GSFC)\nEmily Bell (GSFC)\n\n\n\n\n\nErin McDuffie\n\n\n\n\nTBD\n\n\n\nTBD\n\n\n\n\nKevin Bowman\nRob Green\n\n\n\n\n\nDeborah Smith\nSlesa Adhikari\nSiddharth Chaudhary"
  },
  {
    "objectID": "speakers.html#national-aeronautics-and-space-administration-nasa",
    "href": "speakers.html#national-aeronautics-and-space-administration-nasa",
    "title": "Speakers",
    "section": "",
    "text": "Argie Kavvada (HQ)\nShanna Combley (HQ)\nLesley Ott (GSFC)\nEmily Bell (GSFC)"
  },
  {
    "objectID": "speakers.html#environmental-protection-agency-epa",
    "href": "speakers.html#environmental-protection-agency-epa",
    "title": "Speakers",
    "section": "",
    "text": "Erin McDuffie"
  },
  {
    "objectID": "speakers.html#national-institute-for-standards-and-technology-nist",
    "href": "speakers.html#national-institute-for-standards-and-technology-nist",
    "title": "Speakers",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "speakers.html#national-oceanic-and-atmospheric-administration-noaa",
    "href": "speakers.html#national-oceanic-and-atmospheric-administration-noaa",
    "title": "Speakers",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "speakers.html#jet-propulsion-laboratory-jpl",
    "href": "speakers.html#jet-propulsion-laboratory-jpl",
    "title": "Speakers",
    "section": "",
    "text": "Kevin Bowman\nRob Green"
  },
  {
    "objectID": "speakers.html#university-of-alabama-in-huntsville-uah",
    "href": "speakers.html#university-of-alabama-in-huntsville-uah",
    "title": "Speakers",
    "section": "",
    "text": "Deborah Smith\nSlesa Adhikari\nSiddharth Chaudhary"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html",
    "title": "About the Data",
    "section": "",
    "text": "Methane (CH‚ÇÑ) emissions from wetlands are estimated to be the largest natural source of methane in the global CH‚ÇÑ budget, contributing to roughly one third of the total of natural and anthropogenic emissions. Wetland CH‚ÇÑ is produced by microbes breaking down organic matter in the oxygen deprived environment of inundated soils. Due to limited data availability, the details of the role of wetland CH‚ÇÑ emissions has thus far been underrepresented. Using the Wald Schnee und Landschaft version (LPJ-wsl) of the Lund-Potsdam-Jena Dynamic Global Vegetation Model (LPJ-DGVM) global CH‚ÇÑ emissions from wetlands are estimated at 0.5 x 0.5 degree resolution by simulating wetland extent and using characteristics of these inundated areas, such as soil moisture, temperature, and carbon content, to estimate CH‚ÇÑ quantities emitted into the atmosphere. Highlighted areas displayed in this dataset show concentrated methane sources from tropical and high latitude ecosystems. The LPJ-wsl Wetland Methane Emissions data product presented here consists of global daily and monthly model estimates of terrestrial wetland CH‚ÇÑ emissions from 1980 - 2021. These data are regularly used in conjunction with NASA‚Äôs Goddard Earth Observing System (GEOS) model to simulate the impact of wetlands and other methane sources on atmospheric methane concentrations, to compare against satellite and airborne data, and to improve understanding and prediction of wetland emissions."
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#requirements",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#requirements",
    "title": "About the Data",
    "section": "Requirements",
    "text": "Requirements\n\nNASA Earthdata Account\nSet up Python Environment - See setup_instructions.md in the ‚Äò/setup/‚Äô folder"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#learning-objectives",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#learning-objectives",
    "title": "About the Data",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nHow to use ‚ÄòU.S.GHG Center STAC Catalog‚Äô to access ‚ÄòWetland Methane Emissions, LPJ-wsl Model‚Äô data.\nHow to use ‚Äòearthaccess‚Äô to find MERRA-2 data.\nHow to visualize datasets using ‚Äôfolium‚Äôand perfom zonal statistics.\nHow to plot time series plot for ‚ÄòMERRA-2‚Äô variables and ‚ÄòWetland Methane Emissions, LPJ-wsl Model‚Äô and analyze the results."
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#approach",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#approach",
    "title": "About the Data",
    "section": "Approach",
    "text": "Approach\n\nIdentify available dates and temporal frequency of observations for the given collection using the GHGC API ‚Äò/stac‚Äô endpoint. The collection processed in this notebook is the Wetland Methane Emissions, LPJ-wsl Model data product.\nPass the STAC item into the raster API ‚Äô/stac/tilejson.json ‚Äôendpoint.\nAccess MERRA-2 data for different variables (precipitation rate, surface soil moisture).\nDefine spatial region of interest\nUsing plugins from folium to visualize two tiles (side-by-side), allowing time point comparison.\nAfter the visualization, perform zonal statistics for a given polygon.\nPlot monthly time series for LPJ-wetland emission and different MERRA-2 dataset and analyse them."
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#data",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#data",
    "title": "About the Data",
    "section": "Data",
    "text": "Data\n\nMonthly LPJ Wetland CH4 Emissions (U.S.GHG Center STAC)\nMonthly MERRA-2 Precipitation RateDataset: MERRA2_400.tavgM_2d_flx_Nx Variable: ‚ÄòPRECTOT‚Äô https://disc.gsfc.nasa.gov/datasets/M2TMNXFLX_5.12.4/summary\nMonthly MERRA-2 Surface Soil MoistureDataset: MERRA2_400.tavgM_2d_lnd_Nx Variable: ‚ÄòSFMC‚Äô Long-term mean variable: ‚ÄòGWETTOP‚Äô https://disc.gsfc.nasa.gov/datasets/M2TMNXLND_5.12.4/summary\nMonthly MERRA-2 T2MDataset: MERRA2_400.instM_2d_asm_Nx Variable: ‚ÄòT2M‚Äô https://disc.gsfc.nasa.gov/datasets/M2IMNXASM_5.12.4/summary\nMERRA-2 Long-Term MeansMERRA2.tavgC_2d_ltm_Nx https://disc.gsfc.nasa.gov/datasets/M2TCNXLTM_1/summary"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#setup",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#setup",
    "title": "About the Data",
    "section": "Setup",
    "text": "Setup\nImport the required Python libraries.\n\n# Import required libraries\n\n# import earthaccess\nimport warnings\nimport requests\nimport pandas as pd\nimport geopandas\nimport folium\nimport folium.plugins\nimport seaborn as sns\nimport glob\nimport numpy as np\nimport netCDF4 as nc\nimport matplotlib.pyplot as plt\nimport branca.colormap as cm\n\nfrom folium import Map, TileLayer \nfrom branca.element import Figure\nfrom pystac_client import Client \nfrom pyproj import Geod\nfrom shapely import wkt\nfrom datetime import datetime"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#nasa-earth-data-login-credentials",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#nasa-earth-data-login-credentials",
    "title": "About the Data",
    "section": "NASA Earth Data Login Credentials",
    "text": "NASA Earth Data Login Credentials\nTo download or stream NASA data you will need an Earthdata account, you can create one here https://urs.earthdata.nasa.gov/home. We will use the ‚Äòlogin‚Äô function from the ‚Äòearthaccess‚Äô library for authentication before downloading at the end of the notebook. This function can also be used to create a local ‚Äò.netrc‚Äô file if it doesn‚Äôt exist or add your login info to an existing ‚Äò.netrc‚Äô file. If no Earthdata Login credentials are found in the ‚Äò.netrc‚Äô you‚Äôll be prompted for them. This step is not necessary to conduct searches but is needed to download or stream data."
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#querying-the-stac-api",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#querying-the-stac-api",
    "title": "About the Data",
    "section": "Querying the STAC API",
    "text": "Querying the STAC API\nSearch for LPJ Wetland Methane Emissions Data\n\n# Provide STAC and RASTER API endpoints\nSTAC_API_URL = \"http://ghg.center/api/stac\"\nRASTER_API_URL = \"https://ghg.center/api/raster\"\n\n# Please use the collection name similar to the one used in STAC collection.\n\n# Name of the collection for wetland methane monthly emissions. \ncollection_name = \"lpjwsl-wetlandch4-monthgrid-v1\"\n\n\n# Fetching the collection from STAC collections using appropriate endpoint.\ncollection = requests.get(f\"{STAC_API_URL}/collections/{collection_name}\").json()\ncollection\n\nExamining the contents of our ‚Äòcollection‚Äô under ‚Äòsummaries‚Äô, we see that the data is available from January 1980 to may 2021. By looking at ‚Äòdashboard: time density‚Äô, we can see that these observations are collected monthly.\n\ndef get_item_count(collection_id):\n    count = 0\n    items_url = f\"{STAC_API_URL}/collections/{collection_id}/items\"\n\n    while True:\n        response = requests.get(items_url)\n\n        if not response.ok:\n            print(\"error getting items\")\n            exit()\n\n        stac = response.json()\n        count += int(stac[\"context\"].get(\"returned\", 0))\n        next = [link for link in stac[\"links\"] if link[\"rel\"] == \"next\"]\n\n        if not next:\n            break\n        items_url = next[0][\"href\"]\n\n    return count\n\n\n# Check total number of items available\nnumber_of_items = get_item_count(collection_name)\nitems = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\nprint(f\"Found {len(items)} items\")\n\n\n# Examining the first item in the collection\nitems[0]\n\nBelow, we enter minimum and maximum values to provide our upper and lower bounds in ‚Äòrescale_values.‚Äô"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#search-for-merra-2-data",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#search-for-merra-2-data",
    "title": "About the Data",
    "section": "Search for MERRA-2 Data",
    "text": "Search for MERRA-2 Data\n\nmerra_t2m_dir='merra_t2m_dir/'\nmerra_soil_moisture_dir = 'merra_soil_moisture_dir/'\nmerra_precip_rate_dir = 'merra_precip_rate_dir/'\nmerra_t2m_clim_dir = 'merra_t2m_clim_dir/'\nsavedir = 'saved_files'\n\nmerra_precip_rate_clim_dir = merra_t2m_clim_dir \nmerra_soil_moisture_clim_dir = merra_t2m_clim_dir"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#define-spatial-region-of-interest",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#define-spatial-region-of-interest",
    "title": "About the Data",
    "section": "Define Spatial Region of Interest",
    "text": "Define Spatial Region of Interest\nFor this example, our spatial region of interest (ROI) will be the a region in state of Louisiana (LA). In this example, we will create a rectangular ROI.\n\n# We create a area of interest (polygon) on which will be used later \n\naoi = [-95.9,-87.50,28.7,33.5]\nlouisiana_aoi = {\n    \"type\": \"Feature\",\n    \"properties\": {},\n    \"geometry\": {\n        \"coordinates\": [\n            [\n                [aoi[0], aoi[2]],\n                [aoi[0], aoi[3]],\n                [aoi[1], aoi[3]],\n                [aoi[1],aoi[2]],\n                [aoi[0], aoi[2]]\n            ]\n        ],\n        \"type\": \"Polygon\",\n    },\n}"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-wetland-methane-emissions-data-using-the-raster-api",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-wetland-methane-emissions-data-using-the-raster-api",
    "title": "About the Data",
    "section": "Opening and Exploring Wetland Methane Emissions Data Using the Raster API",
    "text": "Opening and Exploring Wetland Methane Emissions Data Using the Raster API\nIn this notebook, we will explore the temporal impacts of methane emissions. We will visualize the outputs on a map using ‚Äòfolium‚Äô.\n\n# To access the year value from each item more easily, this will let us query more explicity by year and month (e.g., 2020-02)\nitems = {item[\"properties\"][\"datetime\"][:7]: item for item in items} \nasset_name = 'ch4-wetlands-emissions'\nrescale_values = {'max': 2.0, 'min': 0.0}\n\nNow, we will pass the item id, collection name, and ‚Äòrescaling_factor‚Äô to the ‚ÄòRaster API‚Äô endpoint. We will do this twice, once for may 2020 and again for may 2021, so we can visualize each event independently.\n\ncolor_map = \"magma\" # select the color ramp from matplotlib library.\nmay_2020_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2020-05']['collection']}&item={items['2020-05']['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\"\n).json()\nmay_2020_tile\n\n\nmay_2021_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2021-05']['collection']}&item={items['2021-05']['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\nmay_2021_tile"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-ch‚ÇÑ-emissions",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-ch‚ÇÑ-emissions",
    "title": "About the Data",
    "section": "Visualizing CH‚ÇÑ Emissions",
    "text": "Visualizing CH‚ÇÑ Emissions\n\n# We will import folium to map and folium.plugins to allow side-by-side mapping\n# Set initial zoom and center of map for CH‚ÇÑ Layer\n# Centre of map [latitude,longitude]\n\nfrom folium.plugins import MousePosition\n\nmap_ = folium.Map(location=(30,-90), zoom_start=6)\n\n# May 2001\nmap_layer_2001 = TileLayer(\n    tiles=may_2020_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.5,\n)\n\n\n# May 2021\nmap_layer_2021 = TileLayer(\n    tiles=may_2021_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.5,\n)\nsbs = folium.plugins.SideBySideLayers(layer_left=map_layer_2001, layer_right=map_layer_2021)\nmap_layer_2001.add_to(map_)\nmap_layer_2021.add_to(map_)\nfolium.GeoJson(louisiana_aoi, name=\"louisiana, USA\").add_to(map_)\nsbs.add_to(map_)\nMousePosition().add_to(map_)\n# visualising the map\nmap_\n\n\n# We will import folium to map and folium.plugins to add multiple tiles with layer control\n\ncolormap = cm.LinearColormap(colors = ['#2c115f','#721f81','#b73779','#f1605d','#feb078'], vmin = 0, vmax = 2 )\ncolormap.caption = 'g CH‚ÇÑ/m¬≤/day'\n\n# Reading the tiles from raster api\nmay_2021_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2021-05']['collection']}&item={items['2021-05']['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\nmay_2021_tile\njune_2021_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2021-06']['collection']}&item={items['2021-06']['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njune_2021_tile\njuly_2021_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2021-07']['collection']}&item={items['2021-07']['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njuly_2021_tile\n\n# Interactive visulaization \n\nmap_ = folium.Map(location=(30,-90), zoom_start=5)\n\n# May 2001\nmap_layer_202105 = TileLayer(\n    tiles=may_2020_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n    name='May'\n)\nmap_layer_202105.add_to(map_)\n\n# June 2021\nmap_layer_202106 = TileLayer(\n    tiles=june_2021_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n    name='June'\n)\nmap_layer_202106.add_to(map_)\n\n# July 2021\nmap_layer_202107 = TileLayer(\n    tiles=july_2021_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n    name='July'\n)\nmap_layer_202107.add_to(map_)\n\nfolium.GeoJson(louisiana_aoi, name=\"louisiana, USA\").add_to(map_)\nfolium.LayerControl(collapsed=False,position='bottomleft').add_to(map_)\n\nsvg_style = '&lt;style&gt;svg#legend {font-size: 14px; background-color: white;}&lt;/style&gt;'\nmap_.get_root().header.add_child(folium.Element(svg_style))\nmap_.add_child(colormap)\n# visualising the map\nmap_"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-merra-2-data",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-merra-2-data",
    "title": "About the Data",
    "section": "Opening and Exploring MERRA-2 Data",
    "text": "Opening and Exploring MERRA-2 Data\nIn this notebook, we will explore the MERRA-2 data. We will visualize the outputs on a map using ‚Äòfolium‚Äô.\n\nitems = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\n\n\n## visualize MERRA-2\n# [-95.9,-87.50,28.7,33.5]\n\nfile_path = 'merra_t2m_dir/MERRA2_100.instM_2d_asm_Nx.199101.nc4'  # Replace with the path to your NetCDF file\ndataset = nc.Dataset(file_path)\n# Access coordinates (if needed)\nlatitude = dataset.variables['lat'][:]\nlongitude = dataset.variables['lon'][:]\n# Access variables\nvariable_name = 'T2M'  # Replace with the variable you want to plot\n# lat_indices = (latitude &gt;= 28.7) & (latitude &lt;= 33.5)\n# lon_indices = (longitude &gt;= -87.5) & (longitude &lt;= -95.9)\nvariable_data = dataset.variables[variable_name][0,:,:]\n\n# Close the NetCDF file\ndataset.close()\n# Plot the data\nplt.imshow(variable_data, origin='lower', cmap='viridis', extent=(longitude.min(), longitude.max(), latitude.min(), latitude.max()))\nplt.colorbar(label='Variable Unit')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.title(f'Plot of {variable_name}')\nplt.show()"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-methane-emission-in-year-2020-2021",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-methane-emission-in-year-2020-2021",
    "title": "About the Data",
    "section": "Generate Statistics and Time Series Lineplots for Methane Emission in Year 2020, 2021",
    "text": "Generate Statistics and Time Series Lineplots for Methane Emission in Year 2020, 2021\n\n# The bounding box should be passed to the geojson param as a geojson Feature or FeatureCollection\n\ndef generate_stats(item, geojson):\n    result = requests.post(\n        f\"{RASTER_API_URL}/cog/statistics\",\n        params={\"url\": item[\"assets\"][\"ch4-wetlands-emissions\"][\"href\"]},\n        json=geojson,\n    ).json()\n    return {\n        **result[\"properties\"],\n        \"datetime\": item[\"properties\"][\"datetime\"],\n    }\n\nWith the function above, we can generate the statistics for the area of interest.\n\nstats = [generate_stats(item, louisiana_aoi) for item in items[:24]]\nstats\n\n\n# Manipulating and cleaning the stats output from previous cell\n\ndef clean_stats(stats_json) -&gt; pd.DataFrame:\n    df = pd.json_normalize(stats_json)\n    df.columns = [col.replace(\"statistics.b1.\", \"\") for col in df.columns]\n    df[\"date\"] = pd.to_datetime(df[\"datetime\"])\n    return df\n\n\ndf = clean_stats(stats)\ndf.head(5)\n\n\n# Filtering the stats for year 2020 and 2021\n\ndf_2020_2021 = df[(df['date'].dt.year == 2020) | (df['date'].dt.year == 2021)]\ndf_2020_2021['year'] = pd.to_datetime(df_2020_2021['datetime']).dt.year\ndf_2020_2021['month'] = pd.to_datetime(df_2020_2021['datetime']).dt.month\ndf_2020_2021"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "title": "About the Data",
    "section": "Visualizing the Data as a Time Series",
    "text": "Visualizing the Data as a Time Series\nWe can now explore the wetland methane emissions time series (January - December) for the year 2020,2021 available for the Louisiana area of the U.S. We can plot the data set using the code below:\n\nitems = {item[\"properties\"][\"datetime\"][:7]: item for item in items} \nfig = plt.figure(figsize=(20, 10))\n\nsns.lineplot(\n    df_2020_2021,\n    x = 'month', \n    y = 'sum',\n    hue= 'year',\n    palette='flare'\n)\n\n# plt.legend()\nplt.xlabel(\"months\")\nplt.ylabel(\"CH4 emissions g/m2\")\nplt.title(\"CH4 emission Values for Louisiana for 2020 and 2021\")"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-merra2-data-in-year-2020-2021",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-merra2-data-in-year-2020-2021",
    "title": "About the Data",
    "section": "Generate Statistics and Time Series Lineplots for MERRA2 Data in Year 2020, 2021",
    "text": "Generate Statistics and Time Series Lineplots for MERRA2 Data in Year 2020, 2021\n\nparams={\n    'MERRA-2 T2M':\n        {'var':'T2M',\n        'cmap':'#000000',\n        'dir':merra_t2m_dir,\n        'nickname':'merra2_t2m',\n        'climdir':merra_t2m_clim_dir,\n        'climvar':'T2MMEAN'},\n    'MERRA-2 Surface Soil Moisture':\n        {'var':'GWETTOP',\n        'cmap':'#000000',\n        'dir':merra_soil_moisture_dir,\n        'nickname':'merra2_sm',\n        'climdir':merra_soil_moisture_clim_dir,\n        'climvar':'GWETTOP'},\n    'MERRA-2 Precipitation Rate':\n        {'var':'PRECTOT',\n        'cmap':'#000000',\n        'dir':merra_precip_rate_dir,\n        'nickname':'merra2_pr',\n        'climdir':merra_precip_rate_clim_dir,\n        'climvar':'PRECTOT'}\n}\n\nboundaries={\n    'Global':[-180,180,-90,90],\n    'Louisiana': [-95.9,-87.50,28.7,33.5],\n    'CONUS':[-127.08,-63.87,23.55,49.19],   #   conus\n    'Florida':[-84.07,-79.14,24.85,30.5],\n    'Northeast':[-74.88,-69.81,40.48,42.88]\n}\n\nyear=1991\nfocus = 'Northeast'\nanomaly = 1\nparam = ['MERRA-2 Precipitation Rate','MERRA-2 Surface Soil Moisture', 'MERRA-2 T2M' ]\n\n\ndef get_merra2_timeseries(year,focus,p,anomaly):\n    files = glob.glob(params[p]['dir']+'*.nc4')\n    if anomaly:\n        try:\n            clim_files = glob.glob(params[p]['climdir']+'*.nc4')\n        except:\n            print('Climatological mean files (climdir) not found for specified parameter.')\n            breakpoint()\n    month_labels = []\n    box_totals = []\n    month_field = []\n    dt = []\n    for i,f in enumerate(files):\n        data = nc.Dataset(f)\n        \n        #   Get bounding box\n        wlat = np.logical_and(\n            data['lat'][:] &lt; boundaries[focus][3],\n            data['lat'][:] &gt; boundaries[focus][2]\n        )\n        wlon = np.logical_and(\n            data['lon'][:] &lt; boundaries[focus][1],\n            data['lon'][:] &gt; boundaries[focus][0]\n        )\n\n        datestamp = f.split('.')[-2]\n        month = int(datestamp[-2::])\n\n        dt.append(datetime(year,month,1))\n        month_labels.append(datetime(year,month,1).strftime('%B'))\n\n        if anomaly:\n            #   Make sure you read the climatology for the right month (whichfile)\n            whichfile = [datetime(1991,month,1).strftime('%y%m')[1:] in f for f in clim_files]\n            climdata = nc.Dataset(np.array(clim_files)[whichfile][0])\n            \n            #   Calculate sum (emissions) or mean (met params) over your bounding box\n            if 'LPJ' in p:\n                clim_box_total = np.nansum(climdata[params[p]['climvar']][0,wlat,wlon])\n                now_box_total = np.nansum(data[params[p]['var']][0,wlat,wlon])\n            elif 'MERRA' in p:\n                clim_box_total = np.nanmean(climdata[params[p]['climvar']][0,wlat,wlon])\n                now_box_total = np.nanmean(data[params[p]['var']][0,wlat,wlon])\n\n            #   Replace fill values with NaN \n            #   Otherwise differencing might give wild results? (Just be safe)\n            wfillclim = np.where(climdata[params[p]['climvar']][0,:,:] == climdata[params[p]['climvar']]._FillValue)\n            climfield = climdata[params[p]['climvar']][0,:,:]\n            climfield[wfillclim] = np.nan\n            wfillnow = np.where(data[params[p]['var']][0,:,:] == data[params[p]['var']]._FillValue)\n            nowfield = data[params[p]['var']][0,:,:]\n            nowfield[wfillnow] = np.nan\n\n            #   And finally, difference current month and long-term mean \n            box_totals.append(now_box_total - clim_box_total)\n            month_field.append(nowfield - climfield)\n            climdata.close()\n        else:\n            if 'LPJ' in p:\n                box_totals.append(np.nansum(data[params[p]['var']][0,wlat,wlon]))\n            elif 'MERRA' in p:\n                box_totals.append(np.nanmean(data[params[p]['var']][0,wlat,wlon]))\n            #   Replace fill values with NaN (otherwise maps are hard to read) \n            month_field.append(data[params[p]['var']][0,:,:])\n            wfill = np.where(month_field[-1] == data[params[p]['var']]._FillValue)\n            month_field[-1][wfill] = np.nan\n            #breakpoint()\n\n    #   Sort in case months are out of order\n    dti = np.argsort(dt)\n    month_labels = np.array(month_labels)[dti]\n    box_totals = np.array(box_totals)[dti]\n    month_field = np.array(month_field)[dti]\n\n    # print('mean ',np.nanmean(month_field))\n    # print('std ',np.nanstd(month_field))\n\n    data_return = {\n        'month_labels':month_labels,\n        'box_totals':box_totals,\n        'month_fields':month_field,\n        'units':data[params[p]['var']].units,\n        'lat':data['lat'][:],\n        'lon':data['lon'][:],\n        'mean':np.nanmean(month_field),\n        'std' : np.nanstd(month_field)\n    }\n    data.close()\n    return data_return \n\n\ncolors = ['#1B8FB5', '#16B573', '#C76B21']\nfor i,p in enumerate(param):\n    \n    ts = get_merra2_timeseries(year,focus,p,anomaly)\n    print(f'Mean of variable {p} is {ts[\"mean\"]}')\n    print(f'Standard deviation of variable {p} is {ts[\"std\"]}')\n        \n    # if i == 0:\n    fig= plt.figure(figsize=(6,3))\n    ax = fig.add_subplot(1,1,1)\n\n    #breakpoint()\n    try:\n        ax.plot(\n            list(range(0,12)),\n            ts['box_totals'],\n            linestyle='-',\n            linewidth=2,\n            color=colors[i],\n            markersize=4,\n            marker='o',\n            label=p\n        )\n    except ValueError:\n        print('Double check that you have all twelve months of MERRA-2 data downloaded!')\n        print(params[p]['dir'])\n        breakpoint()\n\n    #   Construct plot title\n    title = '%s\\n%s Mean Monthly %s'%(focus,year,p)\n    if anomaly:\n        title+=' Anomaly' \n    if 'LPJ' in p:\n        title = title.replace('Mean','Total')\n    plt.title(title)\n    \n    plt.xticks(list(range(0,12)))\n    ax.set_xticklabels(ts['month_labels'],rotation=40,ha='right')\n\n\n    ax.legend(loc='best')\n    nickname = params[p]['nickname']\n    savename = '%s/box_summed_%s_%s_%s.png'% \\\n        (savedir,nickname,year,focus)\n    if anomaly:\n        ax.plot(list(range(-1,13)),np.zeros(14),linewidth=0.4)\n        savename = savename.replace('.png','_Anomaly.png')\n    ax.set_xlim(-1,12)\n    ax.set_ylim(min(ts['box_totals']),max(ts['box_totals']))     #   manual per parameter\n    plt.show()\n    plt.savefig('saved_files/'+savename.split('/')[-1],dpi=300,bbox_inches='tight')"
  },
  {
    "objectID": "chapters.html",
    "href": "chapters.html",
    "title": "Chapters",
    "section": "",
    "text": "The flow of the workshop\n\n\n\nIntro to the US GHG Center\nThe US GHG Center Data Catalog (STAC)\nThe US GHG Center JupyterHub environment\n\n\n\n\n\nEPA Gridded Methane Emissions Inventory\nComplementing anthropogenic GHG emissions with natural GHG emissions and fluxes\nIdentifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data\n\n\n\n\n\nIntro to GitHub & Communicating Science Discoveries via Web Dashboard\n\n\n‚ÑπÔ∏è Content for each chapter will be added as they are prepared, please check back."
  },
  {
    "objectID": "chapters.html#introduction",
    "href": "chapters.html#introduction",
    "title": "Chapters",
    "section": "",
    "text": "Intro to the US GHG Center\nThe US GHG Center Data Catalog (STAC)\nThe US GHG Center JupyterHub environment"
  },
  {
    "objectID": "chapters.html#science-use-cases",
    "href": "chapters.html#science-use-cases",
    "title": "Chapters",
    "section": "",
    "text": "EPA Gridded Methane Emissions Inventory\nComplementing anthropogenic GHG emissions with natural GHG emissions and fluxes\nIdentifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
  },
  {
    "objectID": "chapters.html#open-science-in-action",
    "href": "chapters.html#open-science-in-action",
    "title": "Chapters",
    "section": "",
    "text": "Intro to GitHub & Communicating Science Discoveries via Web Dashboard\n\n\n‚ÑπÔ∏è Content for each chapter will be added as they are prepared, please check back."
  },
  {
    "objectID": "open-science-in-action/index.html",
    "href": "open-science-in-action/index.html",
    "title": "Open Science in Action: Intro to GitHub & Communicating Science Discoveries via Web Dashboard",
    "section": "",
    "text": "Open Science in Action: Intro to GitHub & Communicating Science Discoveries via Web Dashboard"
  },
  {
    "objectID": "agenda.html",
    "href": "agenda.html",
    "title": "Workshop Agenda",
    "section": "",
    "text": "Workshop Agenda\nThe full-day workshop will be divided into the following sections:\n\n\n\n\n\n\n\n\n8:00 - 8:15\nWelcome\n\nWelcome message\nWorkshop Introduction\nTeam Introduction\nIcebreaker\n\n\n\n8:15 - 8:45\nOverview of the U.S. Greenhouse Gas Center and the Science\n\nWhat is the US GHG Center?\nRole of Methane and Carbon Dioxide in Climate Change\nWhat is included in the Center and why these datasets\nIntroduction to the science use cases / demonstration areas that will be explored during the workshop\n\n\n\n8:45 - 10:00\nIntroduction to the GHG Center Data Catalog\n\nIntro to the VEDA project and its relevance to Earth Science research and the US GHG Center\nWhat is a STAC catalog?\nHands-on exercise: searching and accessing cloud-optimized datasets using the STAC catalog\n\nIntro to JupyterHub and Jupyter Notebooks\n\nAccess to the JupyterHub environment\nCreating and running a Jupyter Notebook in the hub\n\nUsing the pystac client library to read the US GHG STAC catalog\n\nList all available datasets\nSpatial and temporal search\nAccess assets and visualize them\n\nAccessing the US GHG STAC catalog using QGIS on the browser\n\nEstablishing connection to the US GHG STAC catalog using the qgis-stac-plugin in QGIS in the GHG Center JupyterHub environment\nAdding a dataset/asset from the catalog as layer in QGIS\n\n\n\n\n\n10:00 - 10:15\nBREAK\n\n\n10:15 - 11:15\nInteractive Session 1: EPA Gridded Methane Emissions Inventory\n\nBackground and gridding methods overview/ example\nImproving access and latency of human anthropogenic emissions\nHands-on exercise\n\n\n\n11:15 - 12:15\nInteractive Session 2: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes\n\nDescription of data sets and analysis available via the U.S. GHG Center (e.g., gridded wetland emissions and ecosystem exchange estimates)\nHands-on exercise: Exploring annual U.S. wetland methane emissions and their - meteorological influences.\n\n\n\n12:15 - 1:30\nLUNCH BREAK\n\n\n1:30 - 2:45\nIdentifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data\n\nDescription of data sets and analysis available via the U.S. GHG Center (e.g., EMIT methane enhancements; plans for emission rates, CO2, etc.)\nHands-on exercise: Locating enhancement, understanding temporal relevance, exploring site with multiple observations.\n\n\n\n2:45 - 3:15\nOpen Science in Action: Intro to GitHub & Communicating Science Discoveries via Web Dashboard\n\nHow do VEDA, GitHub, and JupyterHub interoperate and why is this important?\nIntroduction to web dashboards for science communication\n\nHands-on exercise: creating a web dashboard to communicate science discoveries using the platform\n\n\n\n\n3:15 - 3:30\nClosing Remarks\n\nFuture Developments and Community Contributions\nEngaging with the U.S. Greenhouse Gas Center\n\n\n\n\nThroughout the workshop, facilitators will be available to provide support and guidance, ensuring participants are able to actively explore the workshop topics and apply their knowledge and skills to their own research projects."
  },
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "Participants are expected to have a basic knowledge of the python programming language.\nParticipants MUST obtain the following to be able to follow along the workshop:\n\nUS GHG Center JupyterHub Access\nEarthdata credentials\n\n\n\nüö® Please make sure you have both of the accesses before you come to the workshop on Sunday.\n\n\n\nThe US GHG Center notebook environment is available to authorized users on an as-need basis. You can request access by using our Hub Access Request form.\n\nMake sure you have a GitHub Account. Take note of your GitHub username.\nFill out the request form and provide needed information. Make sure to use your organization/univerity email and use ‚ÄúAMS Workshop 2024‚Äù as the reason.\nWatch your email for notification of authorization and the invite to join the US GHG Center Hub Access GitHub Team.\nOnce you accept the invitation, you can go to hub.ghg.center and login using your GitHub credentials.\n\n\n\n\nFollow the tutorial on this link to register for Earthdata login: https://www.earthdata.nasa.gov/eosdis/science-system-description/eosdis-components/earthdata-login.\nMake sure to note your username and password."
  },
  {
    "objectID": "prerequisites.html#to-get-us-ghg-center-jupyterhub-access",
    "href": "prerequisites.html#to-get-us-ghg-center-jupyterhub-access",
    "title": "Prerequisites",
    "section": "",
    "text": "The US GHG Center notebook environment is available to authorized users on an as-need basis. You can request access by using our Hub Access Request form.\n\nMake sure you have a GitHub Account. Take note of your GitHub username.\nFill out the request form and provide needed information. Make sure to use your organization/univerity email and use ‚ÄúAMS Workshop 2024‚Äù as the reason.\nWatch your email for notification of authorization and the invite to join the US GHG Center Hub Access GitHub Team.\nOnce you accept the invitation, you can go to hub.ghg.center and login using your GitHub credentials."
  },
  {
    "objectID": "prerequisites.html#to-obtain-earthdata-credentials",
    "href": "prerequisites.html#to-obtain-earthdata-credentials",
    "title": "Prerequisites",
    "section": "",
    "text": "Follow the tutorial on this link to register for Earthdata login: https://www.earthdata.nasa.gov/eosdis/science-system-description/eosdis-components/earthdata-login.\nMake sure to note your username and password."
  },
  {
    "objectID": "intro-stac/index.html",
    "href": "intro-stac/index.html",
    "title": "Spatio-Temporal Asset Catalog",
    "section": "",
    "text": "Spatio-Temporal Asset Catalog"
  },
  {
    "objectID": "interactive-session-2-anthropogenic-ghg-emissions/index.html",
    "href": "interactive-session-2-anthropogenic-ghg-emissions/index.html",
    "title": "Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "",
    "text": "Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "",
    "text": "Identify available dates and temporal frequency of observations for the given collection using the GHGC API /stac endpoint. Collection processed in this notebook is ODIAC CO‚ÇÇ emissions version 2022.\nPass the STAC item into raster API /stac/tilejson.json endpoint\nWe‚Äôll visualize two tiles (side-by-side) allowing for comparison of each of the time points using folium.plugins.DualMap\nAfter the visualization, we‚Äôll perform zonal statistics for a given polygon."
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#approach",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#approach",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "",
    "text": "Identify available dates and temporal frequency of observations for the given collection using the GHGC API /stac endpoint. Collection processed in this notebook is ODIAC CO‚ÇÇ emissions version 2022.\nPass the STAC item into raster API /stac/tilejson.json endpoint\nWe‚Äôll visualize two tiles (side-by-side) allowing for comparison of each of the time points using folium.plugins.DualMap\nAfter the visualization, we‚Äôll perform zonal statistics for a given polygon."
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#about-the-data",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#about-the-data",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "About the Data",
    "text": "About the Data\nThe Open-Data Inventory for Anthropogenic Carbon dioxide (ODIAC) is a high-spatial resolution global emission data product of CO‚ÇÇ emissions from fossil fuel combustion (Oda and Maksyutov, 2011). ODIAC pioneered the combined use of space-based nighttime light data and individual power plant emission/location profiles to estimate the global spatial extent of fossil fuel CO‚ÇÇ emissions. With the innovative emission modeling approach, ODIAC achieved the fine picture of global fossil fuel CO‚ÇÇ emissions at a 1x1km."
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#querying-the-stac-api",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#querying-the-stac-api",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "Querying the STAC API",
    "text": "Querying the STAC API\n\nimport requests\nfrom folium import Map, TileLayer\nfrom pystac_client import Client\n\n\n# Provide STAC and RASTER API endpoints\nSTAC_API_URL = \"http://ghg.center/api/stac\"\nRASTER_API_URL = \"https://ghg.center/api/raster\"\n\n#Please use the collection name similar to the one used in STAC collection.\n# Name of the collection for ODIAC dataset. \ncollection_name = \"odiac-ffco2-monthgrid-v2022\"\n\n\n# Fetching the collection from STAC collections using appropriate endpoint.\ncollection = requests.get(f\"{STAC_API_URL}/collections/{collection_name}\").json()\ncollection\n\n{'id': 'odiac-ffco2-monthgrid-v2022',\n 'type': 'Collection',\n 'links': [{'rel': 'items',\n   'type': 'application/geo+json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022/items'},\n  {'rel': 'parent',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/'},\n  {'rel': 'root',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/'},\n  {'rel': 'self',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022'}],\n 'title': 'ODIAC Fossil Fuel CO‚ÇÇ Emissions',\n 'assets': None,\n 'extent': {'spatial': {'bbox': [[-180, -90, 180, 90]]},\n  'temporal': {'interval': [['2000-01-01T00:00:00+00:00',\n     '2021-12-31T00:00:00+00:00']]}},\n 'license': 'CC-BY-4.0',\n 'keywords': None,\n 'providers': [{'url': 'https://www.nies.go.jp',\n   'name': 'National Institute for Environmental Studies',\n   'roles': ['producer', 'licensor'],\n   'description': None}],\n 'summaries': {'datetime': ['2000-01-01T00:00:00Z', '2021-12-31T00:00:00Z']},\n 'description': 'The Open-Data Inventory for Anthropogenic Carbon dioxide (ODIAC) is a high-spatial resolution global emission data product of CO‚ÇÇ emissions from fossil fuel combustion (Oda and Maksyutov, 2011). ODIAC pioneered the combined use of space-based nighttime light data and individual power plant emission/location profiles to estimate the global spatial extent of fossil fuel CO‚ÇÇ emissions. With the innovative emission modeling approach, ODIAC achieved the fine picture of global fossil fuel CO‚ÇÇ emissions at a 1x1km.',\n 'item_assets': {'co2-emissions': {'type': 'image/tiff; application=geotiff; profile=cloud-optimized',\n   'roles': ['data', 'layer'],\n   'title': 'Fossil Fuel CO‚ÇÇ Emissions',\n   'description': 'CO‚ÇÇ emissions from fossil fuel combustion, cement production and gas flaring.'}},\n 'stac_version': '1.0.0',\n 'stac_extensions': None,\n 'dashboard:is_periodic': True,\n 'dashboard:time_density': 'month'}\n\n\nExamining the contents of our collection under summaries we see that the data is available from January 2000 to December 2021. By looking at the dashboard:time density we observe that the periodic frequency of these observations is monthly.\n\ndef get_item_count(collection_id):\n    count = 0\n    items_url = f\"{STAC_API_URL}/collections/{collection_id}/items\"\n\n    while True:\n        response = requests.get(items_url)\n\n        if not response.ok:\n            print(\"error getting items\")\n            exit()\n\n        stac = response.json()\n        count += int(stac[\"context\"].get(\"returned\", 0))\n        next = [link for link in stac[\"links\"] if link[\"rel\"] == \"next\"]\n\n        if not next:\n            break\n        items_url = next[0][\"href\"]\n\n    return count\n\n\n# Check total number of items available\nnumber_of_items = get_item_count(collection_name)\nitems = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\nprint(f\"Found {len(items)} items\")\n\nFound 264 items\n\n\n\nitems[0]\n\n{'id': 'odiac-ffco2-monthgrid-v2022-202112',\n 'bbox': [-180.0, -90.0, 180.0, 90.0],\n 'type': 'Feature',\n 'links': [{'rel': 'collection',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022'},\n  {'rel': 'parent',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022'},\n  {'rel': 'root',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/'},\n  {'rel': 'self',\n   'type': 'application/geo+json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022/items/odiac-ffco2-monthgrid-v2022-202112'}],\n 'assets': {'co2-emissions': {'href': 's3://ghgc-data-store/odiac-ffco2-monthgrid-v2022/odiac2022_1km_excl_intl_202112.tif',\n   'type': 'image/tiff; application=geotiff; profile=cloud-optimized',\n   'roles': ['data', 'layer'],\n   'title': 'Fossil Fuel CO‚ÇÇ Emissions',\n   'proj:bbox': [-180.0, -90.0, 180.0, 90.0],\n   'proj:epsg': 4326.0,\n   'proj:shape': [21600.0, 43200.0],\n   'description': 'CO‚ÇÇ emissions from fossil fuel combustion, cement production and gas flaring.',\n   'raster:bands': [{'scale': 1.0,\n     'nodata': -9999.0,\n     'offset': 0.0,\n     'sampling': 'area',\n     'data_type': 'float32',\n     'histogram': {'max': 2497.01904296875,\n      'min': -138.71914672851562,\n      'count': 11.0,\n      'buckets': [523457.0, 691.0, 95.0, 28.0, 11.0, 2.0, 2.0, 1.0, 0.0, 1.0]},\n     'statistics': {'mean': 0.9804128408432007,\n      'stddev': 14.766693454324674,\n      'maximum': 2497.01904296875,\n      'minimum': -138.71914672851562,\n      'valid_percent': 100.0}}],\n   'proj:geometry': {'type': 'Polygon',\n    'coordinates': [[[-180.0, -90.0],\n      [180.0, -90.0],\n      [180.0, 90.0],\n      [-180.0, 90.0],\n      [-180.0, -90.0]]]},\n   'proj:projjson': {'id': {'code': 4326.0, 'authority': 'EPSG'},\n    'name': 'WGS 84',\n    'type': 'GeographicCRS',\n    'datum': {'name': 'World Geodetic System 1984',\n     'type': 'GeodeticReferenceFrame',\n     'ellipsoid': {'name': 'WGS 84',\n      'semi_major_axis': 6378137.0,\n      'inverse_flattening': 298.257223563}},\n    '$schema': 'https://proj.org/schemas/v0.4/projjson.schema.json',\n    'coordinate_system': {'axis': [{'name': 'Geodetic latitude',\n       'unit': 'degree',\n       'direction': 'north',\n       'abbreviation': 'Lat'},\n      {'name': 'Geodetic longitude',\n       'unit': 'degree',\n       'direction': 'east',\n       'abbreviation': 'Lon'}],\n     'subtype': 'ellipsoidal'}},\n   'proj:transform': [0.008333333333333333,\n    0.0,\n    -180.0,\n    0.0,\n    -0.008333333333333333,\n    90.0,\n    0.0,\n    0.0,\n    1.0]}},\n 'geometry': {'type': 'Polygon',\n  'coordinates': [[[-180, -90],\n    [180, -90],\n    [180, 90],\n    [-180, 90],\n    [-180, -90]]]},\n 'collection': 'odiac-ffco2-monthgrid-v2022',\n 'properties': {'end_datetime': '2021-12-31T00:00:00+00:00',\n  'start_datetime': '2021-12-01T00:00:00+00:00'},\n 'stac_version': '1.0.0',\n 'stac_extensions': []}\n\n\nThis makes sense as there are 22 years between 2000 - 2021, with 12 months per year, meaning 264 records in total.\nBelow, we are entering the minimum and maximum values to provide our upper and lower bounds in rescale_values."
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#exploring-changes-in-carbon-dioxide-co‚ÇÇ-levels-using-the-raster-api",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#exploring-changes-in-carbon-dioxide-co‚ÇÇ-levels-using-the-raster-api",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "Exploring Changes in Carbon Dioxide (CO‚ÇÇ) levels using the Raster API",
    "text": "Exploring Changes in Carbon Dioxide (CO‚ÇÇ) levels using the Raster API\nWe will explore changes in fossil fuel emissions in urban egions. In this notebook, we‚Äôll explore the impacts of these emissions and explore these changes over time. We‚Äôll then visualize the outputs on a map using folium.\n\n# to access the year value from each item more easily, this will let us query more explicity by year and month (e.g., 2020-02)\nitems = {item[\"properties\"][\"start_datetime\"][:7]: item for item in items} \nasset_name = \"co2-emissions\"\n\n\nrescale_values = {\"max\":items[list(items.keys())[0]][\"assets\"][asset_name][\"raster:bands\"][0][\"histogram\"][\"max\"], \"min\":items[list(items.keys())[0]][\"assets\"][asset_name][\"raster:bands\"][0][\"histogram\"][\"min\"]}\n\nNow we will pass the item id, collection name, and rescaling_factor to the Raster API endpoint. We will do this twice, once for January 2020 and again for January 2000, so that we can visualize each event independently.\n\ncolor_map = \"rainbow\" # please select the color ramp from matplotlib library.\njanuary_2020_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2020-01']['collection']}&item={items['2020-01']['id']}\"\n    f\"&assets={asset_name}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2020_tile\n\n{'tilejson': '2.2.0',\n 'version': '1.0.0',\n 'scheme': 'xyz',\n 'tiles': ['https://ghg.center/api/raster/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?collection=odiac-ffco2-monthgrid-v2022&item=odiac-ffco2-monthgrid-v2022-202001&assets=co2-emissions&color_formula=gamma+r+1.05&colormap_name=rainbow&rescale=-138.71914672851562%2C2497.01904296875'],\n 'minzoom': 0,\n 'maxzoom': 24,\n 'bounds': [-180.0, -90.0, 180.0, 90.0],\n 'center': [0.0, 0.0, 0]}\n\n\n\njanuary_2000_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2000-01']['collection']}&item={items['2000-01']['id']}\"\n    f\"&assets={asset_name}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2000_tile\n\n{'tilejson': '2.2.0',\n 'version': '1.0.0',\n 'scheme': 'xyz',\n 'tiles': ['https://ghg.center/api/raster/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?collection=odiac-ffco2-monthgrid-v2022&item=odiac-ffco2-monthgrid-v2022-200001&assets=co2-emissions&color_formula=gamma+r+1.05&colormap_name=rainbow&rescale=-138.71914672851562%2C2497.01904296875'],\n 'minzoom': 0,\n 'maxzoom': 24,\n 'bounds': [-180.0, -90.0, 180.0, 90.0],\n 'center': [0.0, 0.0, 0]}"
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-co‚ÇÇ-emissions",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-co‚ÇÇ-emissions",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "Visualizing CO‚ÇÇ emissions",
    "text": "Visualizing CO‚ÇÇ emissions\n\n# We'll import folium to map and folium.plugins to allow mapping side-by-side\nimport folium\nimport folium.plugins\n\n# Set initial zoom and center of map for CO‚ÇÇ Layer\nmap_ = folium.plugins.DualMap(location=(34, -118), zoom_start=6)\n\n# December 2001\nmap_layer_2020 = TileLayer(\n    tiles=january_2020_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n)\nmap_layer_2020.add_to(map_.m1)\n\n# December 2021\nmap_layer_2000 = TileLayer(\n    tiles=january_2000_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n)\nmap_layer_2000.add_to(map_.m2)\n\n# visualising the map\nmap_\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#section",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#section",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "",
    "text": "# Texas, USA\ntexas_aoi = {\n    \"type\": \"Feature\",\n    \"properties\": {},\n    \"geometry\": {\n        \"coordinates\": [\n            [\n                # [13.686159004559698, -21.700046934333145],\n                # [13.686159004559698, -23.241974326585833],\n                # [14.753560168039911, -23.241974326585833],\n                # [14.753560168039911, -21.700046934333145],\n                # [13.686159004559698, -21.700046934333145],\n                [-95, 29],\n                [-95, 33],\n                [-104, 33],\n                [-104,29],\n                [-95, 29]\n            ]\n        ],\n        \"type\": \"Polygon\",\n    },\n}\n\n\n# We'll plug in the coordinates for a location\n# central to the study area and a reasonable zoom level\n\nimport folium\n\naoi_map = Map(\n    tiles=\"OpenStreetMap\",\n    location=[\n        30,-100\n    ],\n    zoom_start=6,\n)\n\nfolium.GeoJson(texas_aoi, name=\"Texas, USA\").add_to(aoi_map)\naoi_map\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n# Check total number of items available\nitems = requests.get(\n    f\"{STAC_API_URL}/collections/{collection_name}/items?limit=300\"\n).json()[\"features\"]\nprint(f\"Found {len(items)} items\")\n\nFound 264 items\n\n\n\n# Explore one item to see what it contains\nitems[0]\n\n{'id': 'odiac-ffco2-monthgrid-v2022-202112',\n 'bbox': [-180.0, -90.0, 180.0, 90.0],\n 'type': 'Feature',\n 'links': [{'rel': 'collection',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022'},\n  {'rel': 'parent',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022'},\n  {'rel': 'root',\n   'type': 'application/json',\n   'href': 'https://ghg.center/api/stac/'},\n  {'rel': 'self',\n   'type': 'application/geo+json',\n   'href': 'https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022/items/odiac-ffco2-monthgrid-v2022-202112'}],\n 'assets': {'co2-emissions': {'href': 's3://ghgc-data-store/odiac-ffco2-monthgrid-v2022/odiac2022_1km_excl_intl_202112.tif',\n   'type': 'image/tiff; application=geotiff; profile=cloud-optimized',\n   'roles': ['data', 'layer'],\n   'title': 'Fossil Fuel CO‚ÇÇ Emissions',\n   'proj:bbox': [-180.0, -90.0, 180.0, 90.0],\n   'proj:epsg': 4326.0,\n   'proj:shape': [21600.0, 43200.0],\n   'description': 'CO‚ÇÇ emissions from fossil fuel combustion, cement production and gas flaring.',\n   'raster:bands': [{'scale': 1.0,\n     'nodata': -9999.0,\n     'offset': 0.0,\n     'sampling': 'area',\n     'data_type': 'float32',\n     'histogram': {'max': 2497.01904296875,\n      'min': -138.71914672851562,\n      'count': 11.0,\n      'buckets': [523457.0, 691.0, 95.0, 28.0, 11.0, 2.0, 2.0, 1.0, 0.0, 1.0]},\n     'statistics': {'mean': 0.9804128408432007,\n      'stddev': 14.766693454324674,\n      'maximum': 2497.01904296875,\n      'minimum': -138.71914672851562,\n      'valid_percent': 100.0}}],\n   'proj:geometry': {'type': 'Polygon',\n    'coordinates': [[[-180.0, -90.0],\n      [180.0, -90.0],\n      [180.0, 90.0],\n      [-180.0, 90.0],\n      [-180.0, -90.0]]]},\n   'proj:projjson': {'id': {'code': 4326.0, 'authority': 'EPSG'},\n    'name': 'WGS 84',\n    'type': 'GeographicCRS',\n    'datum': {'name': 'World Geodetic System 1984',\n     'type': 'GeodeticReferenceFrame',\n     'ellipsoid': {'name': 'WGS 84',\n      'semi_major_axis': 6378137.0,\n      'inverse_flattening': 298.257223563}},\n    '$schema': 'https://proj.org/schemas/v0.4/projjson.schema.json',\n    'coordinate_system': {'axis': [{'name': 'Geodetic latitude',\n       'unit': 'degree',\n       'direction': 'north',\n       'abbreviation': 'Lat'},\n      {'name': 'Geodetic longitude',\n       'unit': 'degree',\n       'direction': 'east',\n       'abbreviation': 'Lon'}],\n     'subtype': 'ellipsoidal'}},\n   'proj:transform': [0.008333333333333333,\n    0.0,\n    -180.0,\n    0.0,\n    -0.008333333333333333,\n    90.0,\n    0.0,\n    0.0,\n    1.0]}},\n 'geometry': {'type': 'Polygon',\n  'coordinates': [[[-180, -90],\n    [180, -90],\n    [180, 90],\n    [-180, 90],\n    [-180, -90]]]},\n 'collection': 'odiac-ffco2-monthgrid-v2022',\n 'properties': {'end_datetime': '2021-12-31T00:00:00+00:00',\n  'start_datetime': '2021-12-01T00:00:00+00:00'},\n 'stac_version': '1.0.0',\n 'stac_extensions': []}\n\n\n\n# the bounding box should be passed to the geojson param as a geojson Feature or FeatureCollection\ndef generate_stats(item, geojson):\n    result = requests.post(\n        f\"{RASTER_API_URL}/cog/statistics\",\n        params={\"url\": item[\"assets\"][asset_name][\"href\"]},\n        json=geojson,\n    ).json()\n    return {\n        **result[\"properties\"],\n        \"start_datetime\": item[\"properties\"][\"start_datetime\"][:7],\n    }\n\nWith the function above we can generate the statistics for the AOI.\n\n%%time\nstats = [generate_stats(item, texas_aoi) for item in items]\n\nCPU times: user 6.98 s, sys: 866 ms, total: 7.85 s\nWall time: 5min 49s\n\n\n\nstats[0]\n\n{'statistics': {'b1': {'min': 0.0,\n   'max': 404594.21875,\n   'mean': 12.983534915123457,\n   'count': 518400.0,\n   'sum': 6730664.5,\n   'std': 1073.4786364468523,\n   'median': 0.0,\n   'majority': 0.0,\n   'minority': 0.7153176665306091,\n   'unique': 160223.0,\n   'histogram': [[518384.0, 9.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],\n    [0.0,\n     40459.421875,\n     80918.84375,\n     121378.265625,\n     161837.6875,\n     202297.109375,\n     242756.53125,\n     283215.9375,\n     323675.375,\n     364134.8125,\n     404594.21875]],\n   'valid_percent': 100.0,\n   'masked_pixels': 0.0,\n   'valid_pixels': 518400.0,\n   'percentile_2': 0.0,\n   'percentile_98': 120.91593933105469}},\n 'start_datetime': '2021-12'}\n\n\n\nimport pandas as pd\n\n\ndef clean_stats(stats_json) -&gt; pd.DataFrame:\n    df = pd.json_normalize(stats_json)\n    df.columns = [col.replace(\"statistics.b1.\", \"\") for col in df.columns]\n    df[\"date\"] = pd.to_datetime(df[\"start_datetime\"])\n    return df\n\n\ndf = clean_stats(stats)\ndf.head(5)\n\n\n\n\n\n\n\n\nstart_datetime\nmin\nmax\nmean\ncount\nsum\nstd\nmedian\nmajority\nminority\nunique\nhistogram\nvalid_percent\nmasked_pixels\nvalid_pixels\npercentile_2\npercentile_98\ndate\n\n\n\n\n0\n2021-12\n0.0\n404594.21875\n12.983535\n518400.0\n6730664.5\n1073.478636\n0.0\n0.0\n0.715318\n160223.0\n[[518384.0, 9.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0,...\n100.0\n0.0\n518400.0\n0.0\n120.915939\n2021-12-01\n\n\n1\n2021-11\n0.0\n379500.71875\n12.181822\n518400.0\n6315056.5\n1006.900541\n0.0\n0.0\n0.671284\n160209.0\n[[518384.0, 9.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0,...\n100.0\n0.0\n518400.0\n0.0\n113.472582\n2021-11-01\n\n\n2\n2021-10\n0.0\n365564.12500\n11.742121\n518400.0\n6087115.5\n969.924733\n0.0\n0.0\n0.647386\n160210.0\n[[518384.0, 9.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0,...\n100.0\n0.0\n518400.0\n0.0\n109.432922\n2021-10-01\n\n\n3\n2021-09\n0.0\n369532.53125\n11.863683\n518400.0\n6150133.5\n980.453000\n0.0\n0.0\n0.653934\n160213.0\n[[518384.0, 9.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0,...\n100.0\n0.0\n518400.0\n0.0\n110.523390\n2021-09-01\n\n\n4\n2021-08\n0.0\n412252.34375\n13.224326\n518400.0\n6855490.5\n1093.796870\n0.0\n0.0\n0.728647\n160224.0\n[[518384.0, 9.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0,...\n100.0\n0.0\n518400.0\n0.0\n123.059172\n2021-08-01"
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "Visualizing the Data as a Time Series",
    "text": "Visualizing the Data as a Time Series\nWe can now explore the ODIAC fossil fuel emission time series available (January 2000 -December 2021) for the Texas, Dallas area of USA. We can plot the data set using the code below:\n\nimport matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(20, 10))\n\n\nplt.plot(\n    df[\"date\"],\n    df[\"max\"],\n    color=\"red\",\n    linestyle=\"-\",\n    linewidth=0.5,\n    label=\"Max monthly CO‚ÇÇ emissions\",\n)\n\nplt.legend()\nplt.xlabel(\"Years\")\nplt.ylabel(\"CO2 emissions gC/m2/d\")\nplt.title(\"CO2 emission Values for Texas, Dallas (2000-2021)\")\n\nText(0.5, 1.0, 'CO2 emission Values for Texas, Dallas (2000-2021)')\n\n\n\n\n\n\nprint(items[2][\"properties\"][\"start_datetime\"])\n\n2021-10-01T00:00:00+00:00\n\n\n\noctober_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items[2]['collection']}&item={items[2]['id']}\"\n    f\"&assets={asset_name}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\",\n).json()\noctober_tile\n\n{'tilejson': '2.2.0',\n 'version': '1.0.0',\n 'scheme': 'xyz',\n 'tiles': ['https://ghg.center/api/raster/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?collection=odiac-ffco2-monthgrid-v2022&item=odiac-ffco2-monthgrid-v2022-202110&assets=co2-emissions&color_formula=gamma+r+1.05&colormap_name=rainbow&rescale=-138.71914672851562%2C2497.01904296875'],\n 'minzoom': 0,\n 'maxzoom': 24,\n 'bounds': [-180.0, -90.0, 180.0, 90.0],\n 'center': [0.0, 0.0, 0]}\n\n\n\n# Use bbox initial zoom and map\n# Set up a map located w/in event bounds\nimport folium\n\naoi_map_bbox = Map(\n    tiles=\"OpenStreetMap\",\n    location=[\n        30,-100\n    ],\n    zoom_start=8,\n)\n\nmap_layer = TileLayer(\n    tiles=october_tile[\"tiles\"][0],\n    attr=\"GHG\", opacity = 0.5\n)\n\nmap_layer.add_to(aoi_map_bbox)\n\naoi_map_bbox\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#summary",
    "href": "interactive-session-1-epa-gridded-methane-emissions/odiac-ffco2-monthgrid-v2022_User_Notebook.html#summary",
    "title": "ODIAC Fossil Fuel CO‚ÇÇ Emissions",
    "section": "Summary",
    "text": "Summary\nIn this notebook we have successfully explored, analysed and visualized STAC collecetion for ODIAC C02 fossisl fuel emission (2022)."
  },
  {
    "objectID": "interactive-session-3-large-point-source-methane-emission-events/index.html",
    "href": "interactive-session-3-large-point-source-methane-emission-events/index.html",
    "title": "Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "",
    "text": "Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "",
    "text": "üìÖ Jan 28, 2024, üï£ 8:00 AM - 3:45 PM EST, üìç Baltimore Convention Center\nüîó Session on the AMS Website"
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Description",
    "text": "Description\nThis workshop provides a hands-on learning experience for researchers, educators, and students who are eager to harness NASA‚Äôs key greenhouse gas datasets, open-source tools, and accessible computing resources for visualizing, exploring, publishing, and communicating scientific results. Participants will learn about and utilize the new U.S. Greenhouse Gas Center (GHG Center) to examine curated, trusted data in a cloud computing environment. The activities will center around data and information aligned with three science use cases to ensure broad applicability. Participants will learn to access analysis workflows using cloud-optimized data, access data products via a standards-based catalog, configure data products for web-based visualizations, and communicate scientific discoveries through a web dashboard.\nThe workshop will provide an overview of the newly released U.S. Greenhouse Gas Center, a prototype system that aims to integrate federal and non-federal data, reflecting transparency in both data and methods, to address a variety of end user needs for greenhouse gas monitoring and to bring together actionable information from multiple sources. Examples of products that will be part of this training include methane concentration anomalies from space-based instruments (e.g., EMIT), data on natural emissions and fluxes available from the U.S. GHG Center, as well as gridding processes of anthropogenic methane emissions."
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nUpon completing this workshop, participants will be able to:\n\nUnderstand the scientific basis of the GHG products from the newly formed U.S. Greenhouse Gas Center.\nEmploy Python and Jupyter Notebooks for effective data analysis and visualization of Earth science data in the cloud.\nDisseminate and share scientific findings to achieve a wider impact.\nUnderstand basic principles for contributing to open-sourced software projects."
  },
  {
    "objectID": "index.html#target-audience",
    "href": "index.html#target-audience",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Target Audience",
    "text": "Target Audience\nThe target audience for this workshop includes Earth Science researchers, educators, and students across all career stages and disciplines who are interested in utilizing GHG datasets and open-source tools for their research projects. The workshop will be beneficial for both experienced programmers seeking an overview of modern open tools and those just getting started with scientific programming."
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nThis workshop will be held following the Transform to Open Science Code of Conduct."
  }
]