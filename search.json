[
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "",
    "text": "The National Aeronautics and Space Administration (NASA) has a long history of developing advanced imaging spectrometers for new science and applications, and the Earth Surface Mineral Dust Source Investigation (EMIT) builds on this foundation. EMIT launched to the International Space Station (ISS) on July 14, 2022. The data shows high-confidence research grade methane plumes from point source emitters - updated as they are identified - in keeping with Jet Propulsion Laboratory (JPL) Open Science and Open Data policy.\nMethane is a strong greenhouse gas that is invisible to the human eye. Large methane emissions, typically referred to as point source emissions, represent a significant proportion of total methane emissions from the production, transport, and processing of oil and natural gas, landfills, and other sources. By measuring the spectral fingerprint of methane, EMIT can map areas of high methane concentration over background levels in the atmosphere, identifying plume complexes, and estimating the methane enhancements.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#about-the-data",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#about-the-data",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "",
    "text": "The National Aeronautics and Space Administration (NASA) has a long history of developing advanced imaging spectrometers for new science and applications, and the Earth Surface Mineral Dust Source Investigation (EMIT) builds on this foundation. EMIT launched to the International Space Station (ISS) on July 14, 2022. The data shows high-confidence research grade methane plumes from point source emitters - updated as they are identified - in keeping with Jet Propulsion Laboratory (JPL) Open Science and Open Data policy.\nMethane is a strong greenhouse gas that is invisible to the human eye. Large methane emissions, typically referred to as point source emissions, represent a significant proportion of total methane emissions from the production, transport, and processing of oil and natural gas, landfills, and other sources. By measuring the spectral fingerprint of methane, EMIT can map areas of high methane concentration over background levels in the atmosphere, identifying plume complexes, and estimating the methane enhancements.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#requirements",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#requirements",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Requirements",
    "text": "Requirements\n\nSet up Python Environment - See setup_instructions.md in the /setup/ folder",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#learning-objectives",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#learning-objectives",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nHow to use U.S. GHG Center STAC Catalog to access EMIT Methane Point Source Plume Complexes data.\nHow to visualize ISS Spatial coverage and detect plumes along the path of the ISS.\nHow to visualize datasets using folium.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#approach",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#approach",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Approach",
    "text": "Approach\n\nVisualize the spatial coverage of the ISS and the observed plumes along its path\n\nIdentify available dates and temporal frequency of observations for a given collection using the GHGC API /stac endpoint. The collection processed in this notebook is the Earth Surface Mineral Dust Source Investigation (EMIT) methane emission plumes data product\nPass the STAC item into the raster API /stac/tilejson.json endpoint\nDisplay the plumes using folium.Map",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#nasa-earth-data-login-credentials",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#nasa-earth-data-login-credentials",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "NASA Earth Data Login Credentials",
    "text": "NASA Earth Data Login Credentials\nTo download or stream NASA data you will need an Earthdata account, you can create one here https://urs.earthdata.nasa.gov/home. We will use the login function from the earthaccess library for authentication before downloading at the end of the notebook. This function can also be used to create a local .netrc file if it doesn’t exist or add your login info to an existing .netrc file. If no Earthdata Login credentials are found in the .netrc you’ll be prompted for them. This step is not necessary to conduct searches but is needed to download or stream data.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#define-the-spatial-region-of-interest",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#define-the-spatial-region-of-interest",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Define the Spatial Region of Interest",
    "text": "Define the Spatial Region of Interest\nFor this example, our spatial region of interest (ROI) will be the Permian Basin, USA. The Permian Basin is a regional depression expanding from the eastern side of New Mexico to West Texas, covering roughly 75 thousand square miles of land. This region is known to be “the largest hydrocarbon-producing basins in the United States and the world” U.S. Energy Information Administration. Consequently, the Permian Basin is prone to excessive air pollution and a suitable site for monitoring methane variability and concentrations using the EMIT data.\n\n# Loading Permian Basin shape file as a region of interest\n# User can pass any json or shape file here\n# The \"geopandas\" library makes working with geospatial data easier by facilitating spatial operations on geometric types\nfile_path = f\"{os.getenv('HOME')}/shared/data/use-case-3\"   \npermian_basin = geopandas.read_file(f\"{file_path}/Permian.zip\")\npermian_basin = permian_basin.set_crs(4326,allow_override=True)\n\n\nFailed to start the Kernel. \n\nJupyter server crashed. Unable to connect. \n\nError code from Jupyter: 1\n\nusage: jupyter.py [-h] [--version] [--config-dir] [--data-dir] [--runtime-dir]\n\n                  [--paths] [--json] [--debug]\n\n                  [subcommand]\n\n\n\nJupyter: Interactive Computing\n\n\n\npositional arguments:\n\n  subcommand     the subcommand to launch\n\n\n\noptions:\n\n  -h, --help     show this help message and exit\n\n  --version      show the versions of core jupyter packages and exit\n\n  --config-dir   show Jupyter config dir\n\n  --data-dir     show Jupyter data dir\n\n  --runtime-dir  show Jupyter runtime dir\n\n  --paths        show all Jupyter paths. Add --json for machine-readable\n\n                 format.\n\n  --json         output paths as machine-readable json\n\n  --debug        output debug information about paths\n\n\n\nAvailable subcommands: lite piplite\n\n\n\nJupyter command `jupyter-notebook` not found. \n\nView Jupyter &lt;a href='command:jupyter.viewOutput'&gt;log&lt;/a&gt; for further details.\n\n\n\n\n# The ISS spatial coverage data is called on here\ncoverage = geopandas.read_file(f'{file_path}/coverage.json')\ncoverage = coverage.set_crs(4326,allow_override=True)\n\n# The ISS Date Time is converted to strings\ncoverage['new_start_time'] = coverage.start_time.astype('str')\n\n# locations of where plumes are detected for the August 1, 2022 - present time period\nmetadata_json = geopandas.read_file(f'{file_path}/methane_metadata.json')\nmetadata_json = metadata_json.set_crs(4326,allow_override=True)\nmetadata_json['new_start_time'] = metadata_json['UTC Time Observed'].astype('str')\nmetadata_json['Scene FIDs'] = list(map(lambda x : x[0] ,metadata_json['Scene FIDs']))\ntarget_mask = geopandas.read_file(f'{file_path}/target_mask.json')\ntarget_mask = target_mask.set_crs(4326,allow_override=True)\n\n\n# The ISS spatial coverage data is clipped to the ROI (Permian Basin)\nresult_coverage = geopandas.clip(coverage, permian_basin)\n# result_metadata = geopandas.clip(metadata_json, permian_basin)\n\n\nnew_coverage = result_coverage.reset_index(drop=True)\n# result_coverage['date'] = result_coverage[(result_coverage['new_start_time'][:10]&lt;='2023-12-15') & (result_coverage['new_start_time'][:10]&gt;='2023-07-01')]\nnew_coverage['date'] = new_coverage.start_time.dt.strftime('%Y-%m-%d')\nnew_coverage = new_coverage[(new_coverage['date']&lt;='2023-12-15') & (new_coverage['date']&gt;='2023-07-01')]\nnew_coverage.reset_index(drop=True, inplace=True)\nnew_coverage",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#opening-and-exploring-the-spatial-coverage-of-the-iss-and-where-plumes-were-detected",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#opening-and-exploring-the-spatial-coverage-of-the-iss-and-where-plumes-were-detected",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Opening and Exploring the Spatial Coverage of the ISS and where plumes were detected",
    "text": "Opening and Exploring the Spatial Coverage of the ISS and where plumes were detected\nIn this cell, we will visualize the EMIT-derived methane plumes over the Permian Basin using the folium library.\n\n# Setting a colormap using the “branca.colormap” library \ncolormap = cm.linear.YlGn_09.scale(\n    coverage.start_time.min(), coverage.start_time.max()\n)\n\n\n# Initializing a map with a center at [43, -100] and a zoom level of 4. The use of tiles = None has been employed to remove the default basemap.\nm_ = folium.Map(location=[43, -100], zoom_start=4, tiles=None)\n\n\n# The TileLayer library helps in manipulating and displaying layers on a map\n# For more information on other available tile layers, please visit https://leaflet-extras.github.io/leaflet-providers/preview/\nfolium.TileLayer(tiles='https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png', name='ESRI World Imagery', attr='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',overlay='True').add_to(m_)\n\n\n# From covergae.json fid, geometry has been selected\n# map_layer_coverage_target = folium.GeoJson(target_mask, name = ' Target Mask', marker=folium.Marker(icon=folium.Icon(color='blue', icon='globe')))\nmap_layer_coverage_target = folium.GeoJson(target_mask, name = ' Target Mask', marker=folium.Circle(radius=3, fill_color='blue', color='blue'))\nmap_layer_coverage_metadata = folium.GeoJson(metadata_json[['Scene FIDs', 'geometry', 'new_start_time']], name = ' Metadata', marker=folium.Circle(radius=3, fill_color='red', color='red'))\n\n\nmap_layer_coverage_target.add_to(m_)\n# map_layer_coverage_target.marker(icon=folium.Icon(color='blue', icon='star'))\nmap_layer_coverage_metadata.add_to(m_)\n\n\n# We select “geometry” from the “fid” field in “coverage.json”\ncoverage[['fid', 'geometry', 'new_start_time']].explore(\n    \"fid\",\n    categorical=False,\n    tooltip=[\n        \"fid\",\n        \"new_start_time\",\n    ],\n    popup=True,\n    style_kwds=dict(fillOpacity=0.1, width=2),\n    name=\"Coverage\",\n    m=m_,\n    legend=False,\n    show=False\n)\n\n\n# The “LayerControl” creates the toggle button for all the layers\nfolium.LayerControl(collapsed=False).add_to(m_)\n# Display the map\nm_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#opening-and-exploring-the-emit-methane-point-source-plume-complexes-data",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#opening-and-exploring-the-emit-methane-point-source-plume-complexes-data",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Opening and Exploring the EMIT Methane Point Source Plume Complexes Data",
    "text": "Opening and Exploring the EMIT Methane Point Source Plume Complexes Data\nSearch for the EMIT Methane Point Source Plume Complexes Data using the Raster API and its STAC collection name\n\n# Provide STAC and RASTER API endpoints\nSTAC_API_URL = \"http://ghg.center/api/stac\"\nRASTER_API_URL = \"https://ghg.center/api/raster\"\n\n# Please use the collection name similar to the one used in STAC collection\n# Name of the collection for methane emission plumes \ncollection_name = \"emit-ch4plume-v1\"\n\n\n# Fetching the collection from STAC collections using appropriate endpoint\n# the 'requests' library allows a HTTP request possible\ncollection = requests.get(f\"{STAC_API_URL}/collections/{collection_name}\").json()\ncollection = {key: value for key, value in collection.items() if key != 'summaries'}\ncollection\n\nHere we are examining the contents of our collection under the temporal variable. Please keep in mind that data is available from August 2022 to May 2023. By looking at the dashboard: time density, we can see that observations are collected on a daily-basis with plume emissions emerging from multiple places on the same date.\n\n# Create a function that would search for the number of items in above data collection in the STAC API\ndef get_item_count(collection_id):\n    count = 0\n    items_url = f\"{STAC_API_URL}/collections/{collection_id}/items\"\n\n    while True:\n        response = requests.get(items_url)\n\n        if not response.ok:\n            print(\"error getting items\")\n            exit()\n\n        stac = response.json()\n        count += int(stac[\"context\"].get(\"returned\", 0))\n        next = [link for link in stac[\"links\"] if link[\"rel\"] == \"next\"]\n\n        if not next:\n            break\n        items_url = next[0][\"href\"]\n\n    return count\n\n\n# Apply the above function and check the total number of items available within the collection\nnumber_of_items = get_item_count(collection_name)\nplume_complexes = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\nparse_plume_complexes = plume_complexes\nprint(f\"Found {len(plume_complexes)} items\")\n\n\n# Exploring the items in the collection\nplume_complex_ids = list(map(lambda d: d.get('id', f\"id not found in dictionary\"), plume_complexes))\nplume_complex_ids[:10]\n\n\n# To access the year value from each item more easily, this will let us query more explicitly by year and month (e.g., 2020-02)\nplume_complexes = {plume_complex[\"id\"]: plume_complex for plume_complex in plume_complexes} \n\n\n# Set the asset value to the appropriate parameter \nasset_name = \"ch4-plume-emissions\"\n\nBelow, we are entering the minimum and maximum values to provide our upper and lower bounds in rescale_values.\n\n# Fetching the min and max values for a specific item\nrescale_values = {\"max\":plume_complexes[list(plume_complexes.keys())[0]][\"assets\"][asset_name][\"raster:bands\"][0][\"histogram\"][\"max\"], \"min\":plume_complexes[list(plume_complexes.keys())[0]][\"assets\"][asset_name][\"raster:bands\"][0][\"histogram\"][\"min\"]}\n\nNow we will pass the item id, collection name, and rescaling_factor to the Raster API endpoint. We will do this for only one item so that we can visualize the event.\n\n# Set a colormap for the granule\n# Please refer to matplotlib library if you'd prefer choosing a different color ramp (https://matplotlib.org/stable/users/explain/colors/colormaps.html)\ncolor_map = \"magma\" \n\n\n# Select the item ID which you want to visualize. Item ID is in the format yyyymmdd followed by the timestamp. This ID can be extracted from the Cloud Optimized GeoTIFF (OG) name as well.\nplume_complex_id_1 = \"EMIT_L2B_CH4PLM_001_20230418T200118_000829\"\n\n\n# Extract the tile using the appropriate ID and colormap \nmethane_plume_tile_1 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={plume_complexes[plume_complex_id_1]['collection']}&item={plume_complexes[plume_complex_id_1]['id']}\"\n    f\"&assets={asset_name}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\nmethane_plume_tile_1\n\n\n# Set a colormap for the granule\n# Please refer to matplotlib library if you'd prefer choosing a different color ramp (https://matplotlib.org/stable/users/explain/colors/colormaps.html)\ncolor_map = \"magma\" \n\n\n# Select the item ID which you want to visualize. Item ID is in the format yyyymmdd followed by the timestamp. This ID can be extracted from the COG name as well.\nplume_complex_id_2 = \"EMIT_L2B_CH4PLM_001_20230614T193706_000038\"\n\n\n# Extract the tile using the appropriate ID and colormap \nmethane_plume_tile_2 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={plume_complexes[plume_complex_id_2]['collection']}&item={plume_complexes[plume_complex_id_2]['id']}\"\n    f\"&assets={asset_name}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\nmethane_plume_tile_2",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#visualizing-ch₄-emission-plume",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#visualizing-ch₄-emission-plume",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Visualizing CH₄ Emission Plume",
    "text": "Visualizing CH₄ Emission Plume\n\n# Set a colormap for the granule\n# Please refer to matplotlib library if you'd prefer choosing a different color ramp (https://matplotlib.org/stable/users/explain/colors/colormaps.html)\ncolormap = \"magma\" \n\n\n#Defining the breaks in the colormap \ncolor_map = cm.LinearColormap(colors = ['#310597', '#4C02A1', '#6600A7', '#7E03A8', '#9511A1', '#AA2395', '#BC3587', '#CC4778', '#DA5A6A', '#E66C5C', '#F0804E', '#F89540','#FDAC33', '#FDC527', '#F8DF25'], vmin = 0, vmax = 1500 )\n\n\n# Add an appropriate caption, in this case it would be Parts per million meter\ncolor_map.caption = 'ppm-m'\n\n\n# Select the item ID which you want to visualize. Item ID is in the format yyyymmdd followed by the timestamp. This ID can be extracted from the COG name as well.\n# Set initial zoom and center of map for plume Layer\nmap_ = folium.Map(location=(methane_plume_tile_1[\"center\"][1], methane_plume_tile_1[\"center\"][0]), zoom_start=13, tiles=None, tooltip = 'test tool tip')\nfolium.TileLayer(tiles='https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png', name='ESRI World Imagery', attr='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',overlay='True').add_to(map_)\n\n\n# Use the 'TileLayer' library to display the raster layer, add an appropriate caption, and adjust the transparency of the layer on the map\nmap_layer = TileLayer(\n    tiles=methane_plume_tile_1[\"tiles\"][0],\n    name='Plume Complex Landfill',\n    overlay='True',\n    attr=\"GHG\",\n    opacity=1,\n)\nmap_layer.add_to(map_)\n\n\n# Adjust map elements \nfolium.LayerControl(collapsed=False, position='bottomleft').add_to(map_)\nmap_.add_child(color_map)\nsvg_style = '&lt;style&gt;svg#legend {font-size: 14px; background-color: white;}&lt;/style&gt;'\nmap_.get_root().header.add_child(folium.Element(svg_style))\n\n\n# Visualizing the map\nmap_\n\n\ncolormap = \"magma\" # please refer to matplotlib library if you'd prefer choosing a different color ramp.\n# For more information on Colormaps in Matplotlib, please visit https://matplotlib.org/stable/users/explain/colors/colormaps.html\n\n#Defining the breaks in the colormap \ncolor_map = cm.LinearColormap(colors = ['#310597', '#4C02A1', '#6600A7', '#7E03A8', '#9511A1', '#AA2395', '#BC3587', '#CC4778', '#DA5A6A', '#E66C5C', '#F0804E', '#F89540','#FDAC33', '#FDC527', '#F8DF25'], vmin = 0, vmax = 1500 )\ncolor_map.caption = 'ppm-m'\n\n# Set initial zoom and center of map for plume Layer\nmap_ = folium.Map(location=(methane_plume_tile_2[\"center\"][1], methane_plume_tile_2[\"center\"][0]), zoom_start=13, tiles=None, tooltip = 'test tool tip')\nfolium.TileLayer(tiles='https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png', name='ESRI World Imagery', attr='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',overlay='True').add_to(map_)\n\n\nmap_layer = TileLayer(\n    tiles=methane_plume_tile_2[\"tiles\"][0],\n    name='Plume Complex Agriculture',\n    overlay='True',\n    attr=\"GHG\",\n    opacity=1,\n)\nmap_layer.add_to(map_)\n\n\n# Adjust map elements \nfolium.LayerControl(collapsed=False, position='bottomleft').add_to(map_)\nmap_.add_child(color_map)\nsvg_style = '&lt;style&gt;svg#legend {font-size: 14px; background-color: white;}&lt;/style&gt;'\nmap_.get_root().header.add_child(folium.Element(svg_style))\n\n\n# Visualizing the map\nmap_\n\n\n# Creating a dataframe for each plume in the STAC and its corresponding area \nplume_df = pd.DataFrame()\nfor plume in parse_plume_complexes:\n    temp_polygon = geopandas.GeoDataFrame.from_features([plume])['geometry'].values[0]\n    geod = Geod(ellps='WGS84')\n    ply = wkt.loads(str(temp_polygon))\n\n    temp_dict = {'id':plume['id'], 'geometry':temp_polygon, 'area(km2)':(abs(geod.geometry_area_perimeter(ply)[0])/1e+6), 'date':plume['properties']['datetime'][:10]}\n    plume_df = plume_df._append(temp_dict, ignore_index = True)\n\n\n# Print the generated dataframe\nplume_df\n# plume['properties']['datetime'][:10]",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#visualizing-ch4-emission-plumes-in-the-permian-basin",
    "href": "sections/use-case-3/emit-ch4plume-v1_User_Notebook.html#visualizing-ch4-emission-plumes-in-the-permian-basin",
    "title": "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data",
    "section": "Visualizing CH4 Emission Plumes in the Permian Basin",
    "text": "Visualizing CH4 Emission Plumes in the Permian Basin\n\n# Converting plume_df into a geo dataframe for further geospatial analysis\ngeo_temp_df = geopandas.GeoDataFrame(plume_df, geometry=plume_df.geometry, crs = 'EPSG:4326')\n\n\n# Selecting all the targeted plume areas that are within the Permian Basin region\ngeo_temp_df = geopandas.clip(geo_temp_df, permian_basin)\n# filtered_geo_temp_df = geo_temp_df[(geo_temp_df['date']&lt;='2023-12-15') & (geo_temp_df['date']&gt;='2023-07-01') ]\n# filtered_geo_temp_df\n\n\ncolormap = \"magma\" # please refer to matplotlib library if you'd prefer choosing a different color ramp.\n# For more information on Colormaps in Matplotlib, please visit https://matplotlib.org/stable/users/explain/colors/colormaps.html\n\n\n# Defining the breaks in the colormap\ncolor_map = cm.LinearColormap(colors = ['#310597', '#4C02A1', '#6600A7', '#7E03A8', '#9511A1', '#AA2395', '#BC3587', '#CC4778', '#DA5A6A', '#E66C5C', '#F0804E', '#F89540','#FDAC33', '#FDC527', '#F8DF25'], vmin = 0, vmax = 1500 )\ncolor_map.caption = 'ppm-m'\n\n\n# Set the initial zoom value and adjust the plume layer to be displayed at the 31.8 degree North and -101.7 degree West\nmap_ = folium.Map(location=[31.8,-101.7], zoom_start=11, tiles=None)\nfolium.TileLayer(tiles='https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png', name='ESRI World Imagery', attr='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',overlay='True').add_to(map_)\nnew_coverage[['fid', 'geometry', 'new_start_time']].explore(\n    \"fid\",\n    categorical=True,\n    tooltip=[\n        \"fid\",\n        \"new_start_time\",\n    ],\n    popup=True,\n    style_kwds=dict(fillOpacity=0.1, width=2),\n    name=\"Coverage\",\n    m=map_,\n    legend=False,\n    show=True\n)\n\nmap_layer_permian = folium.GeoJson(permian_basin, name= 'Permian Shape')\nmap_layer_permian.add_to(map_)\n\n\n# Extract and display the tile using the appropriate ID, colormap, asset name (parameter), and rescale values \nfor tile_id in geo_temp_df['id']: \n    methane_plume_tile = requests.get(\n        f\"{RASTER_API_URL}/stac/tilejson.json?collection={plume_complexes[tile_id]['collection']}&item={plume_complexes[tile_id]['id']}\"\n        f\"&assets={asset_name}\"\n        f\"&color_formula=gamma+r+1.05&colormap_name={colormap}\"\n        f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n    ).json()\n    methane_plume_tile\n\n    map_layer = TileLayer(\n        tiles=methane_plume_tile[\"tiles\"][0],\n        name=tile_id,\n        show=True,\n        overlay='True',\n        attr=\"GHG\",\n        opacity=1,\n    )\n    map_layer.add_to(map_)\n\n\n# Adjust map elements\nfolium.LayerControl(collapsed=True, position='bottomleft').add_to(map_)\nmap_.add_child(color_map)\nsvg_style = '&lt;style&gt;svg#legend {font-size: 14px; background-color: white;}&lt;/style&gt;'\nmap_.get_root().header.add_child(folium.Element(svg_style))\n\n\n# Visualizing the map\nmap_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 3 - Explore Data Integration with QGIS",
      "Interactive Session: Identifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "",
    "text": "Methane (CH₄) emissions from wetlands are estimated to be the largest natural source of methane in the global CH₄ budget, contributing to roughly one third of the total of natural and anthropogenic emissions. Wetland CH₄ is produced by microbes breaking down organic matter in the oxygen deprived environment of inundated soils. Due to limited data availability, the details of the role of wetland CH₄ emissions has thus far been underrepresented. Using the Wald Schnee und Landschaft version (LPJ-wsl) of the Lund-Potsdam-Jena Dynamic Global Vegetation Model (LPJ-DGVM) global CH₄ emissions from wetlands are estimated at 0.5 x 0.5 degree resolution by simulating wetland extent and using characteristics of these inundated areas, such as soil moisture, temperature, and carbon content, to estimate CH₄ quantities emitted into the atmosphere. Highlighted areas displayed in this dataset show concentrated methane sources from tropical and high latitude ecosystems. The LPJ-wsl Wetland Methane Emissions data product presented here consists of global daily and monthly model estimates of terrestrial wetland CH₄ emissions from 1980 - 2021. These data are regularly used in conjunction with National Aeronautics and Space Administration’s (NASA) Goddard Earth Observing System (GEOS) model to simulate the impact of wetlands and other methane sources on atmospheric methane concentrations, to compare against satellite and airborne data, and to improve understanding and prediction of wetland emissions.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#about-the-data",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#about-the-data",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "",
    "text": "Methane (CH₄) emissions from wetlands are estimated to be the largest natural source of methane in the global CH₄ budget, contributing to roughly one third of the total of natural and anthropogenic emissions. Wetland CH₄ is produced by microbes breaking down organic matter in the oxygen deprived environment of inundated soils. Due to limited data availability, the details of the role of wetland CH₄ emissions has thus far been underrepresented. Using the Wald Schnee und Landschaft version (LPJ-wsl) of the Lund-Potsdam-Jena Dynamic Global Vegetation Model (LPJ-DGVM) global CH₄ emissions from wetlands are estimated at 0.5 x 0.5 degree resolution by simulating wetland extent and using characteristics of these inundated areas, such as soil moisture, temperature, and carbon content, to estimate CH₄ quantities emitted into the atmosphere. Highlighted areas displayed in this dataset show concentrated methane sources from tropical and high latitude ecosystems. The LPJ-wsl Wetland Methane Emissions data product presented here consists of global daily and monthly model estimates of terrestrial wetland CH₄ emissions from 1980 - 2021. These data are regularly used in conjunction with National Aeronautics and Space Administration’s (NASA) Goddard Earth Observing System (GEOS) model to simulate the impact of wetlands and other methane sources on atmospheric methane concentrations, to compare against satellite and airborne data, and to improve understanding and prediction of wetland emissions.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#requirements",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#requirements",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Requirements",
    "text": "Requirements\n\nSet up Python Environment - See setup_instructions.md in the /setup/ folder",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#learning-objectives",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#learning-objectives",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nHow to use U.S. GHG Center STAC Catalog to access Wetland Methane Emissions, LPJ-wsl Model data\nHow to use earthaccess to find MERRA-2 data\nHow to visualize datasets using folium and perform zonal statistics\nHow to plot time series for MERRA-2 variables and Wetland Methane Emissions, LPJ-wsl Model and analyze the results",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#approach",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#approach",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Approach",
    "text": "Approach\n\nIdentify available dates and temporal frequency of observations for the given collection using the GHGC API /stacendpoint. The collection processed in this notebook is the Wetland Methane Emissions, LPJ-wsl Model data product\nPass the STAC item into the raster API /stac/tilejson.json endpoint\nAccess the MERRA-2 data for different variables (precipitation rate, surface soil moisture)\nDefine the spatial region of interest\nUsing plugins from folium to visualize two tiles (side-by-side), allowing time point comparison\nAfter the visualization, perform zonal statistics for a given polygon\nPlot monthly time series for LPJ-wetland emission and different MERRA-2 dataset and analyze them",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#data",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#data",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Data",
    "text": "Data\n\nMonthly LPJ Wetland CH4 Emissions (U.S.GHG Center STAC)\nMonthly MERRA-2 Precipitation RateDataset: MERRA2_400.tavgM_2d_flx_Nx Variable: PRECTOT https://disc.gsfc.nasa.gov/datasets/M2TMNXFLX_5.12.4/summary\nMonthly MERRA-2 Surface Soil MoistureDataset: MERRA2_400.tavgM_2d_lnd_Nx Variable: SFMC Long-term mean variable: GWETTOP https://disc.gsfc.nasa.gov/datasets/M2TMNXLND_5.12.4/summary\nMonthly MERRA-2 T2MDataset: MERRA2_400.instM_2d_asm_Nx Variable: T2M https://disc.gsfc.nasa.gov/datasets/M2IMNXASM_5.12.4/summary\nMERRA-2 Long-Term MeansMERRA2.tavgC_2d_ltm_Nx https://disc.gsfc.nasa.gov/datasets/M2TCNXLTM_1/summary",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#setup",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#setup",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Setup",
    "text": "Setup\nImport the required Python libraries by running the next cell.\n\n# import earthaccess\nimport os\nimport warnings\nimport requests\nimport pandas as pd\nos.environ['USE_PYGEOS'] = '0'\nimport geopandas\nimport folium\nimport folium.plugins\nimport seaborn as sns\nimport glob\nimport numpy as np\nimport netCDF4 as nc\nimport matplotlib.pyplot as plt\nimport branca.colormap as cm\n\nfrom folium import Map, TileLayer \nfrom branca.element import Figure\nfrom pystac_client import Client \nfrom pyproj import Geod\nfrom shapely import wkt\nfrom datetime import datetime",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#nasa-earth-data-login-credentials",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#nasa-earth-data-login-credentials",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "NASA Earth Data Login Credentials",
    "text": "NASA Earth Data Login Credentials\nTo download or stream NASA data you will need an Earthdata account, you can create one here https://urs.earthdata.nasa.gov/home. We will use the login function from the earthaccess library for authentication before downloading at the end of the notebook. This function can also be used to create a local .netrc file if it doesn’t exist or add your login info to an existing .netrc file. If no Earthdata Login credentials are found in the .netrc you’ll be prompted for them. This step is not necessary to conduct searches but is needed to download or stream data.\n\n# from netrc import netrc\n# from subprocess import Popen\n# from platform import system\n# from getpass import getpass\n# import os\n# import requests\n# import xarray as xr\n# import s3fs\n# import boto3\n# import cartopy.crs as ccrs\n# import cartopy.feature as cfeature\n# import matplotlib.pyplot as plt\n# import warnings\n# from IPython.display import display, Markdown\n\n# if (boto3.client('s3').meta.region_name == 'us-west-2'):\n#     display(Markdown('### us-west-2 Region Check: &#x2705;'))\n# else:\n#     display(Markdown('### us-west-2 Region Check: &#10060;'))\n#     raise ValueError('Your notebook is not running inside the AWS us-west-2 region, and will not be able to directly access NASA Earthdata S3 buckets')\n\n# urs = 'urs.earthdata.nasa.gov'    # Earthdata URL endpoint for authentication\n# prompts = ['Enter NASA Earthdata Login Username: ',\n#            'Enter NASA Earthdata Login Password: ']\n\n# netrc_name = \".netrc\"\n\n# # Determine if netrc file exists, and if so, if it includes NASA Earthdata Login Credentials\n# try:\n#     netrcDir = os.path.expanduser(f\"~/{netrc_name}\")\n#     # Check credentials against URS, and if username exists\n#     netrc(netrcDir).authenticators(urs)[0]\n\n# # Below, create a netrc file and prompt user for NASA Earthdata Login Username and Password\n# except FileNotFoundError:\n#     homeDir = os.path.expanduser(\"~\")\n#     Popen('touch {0}{2} | echo machine {1} &gt;&gt; {0}{2}'.format(homeDir + os.sep, urs, netrc_name), shell=True)\n#     Popen('echo login {} &gt;&gt; {}{}'.format(getpass(prompt=prompts[0]), homeDir + os.sep, netrc_name), shell=True)\n#     Popen('echo \\'password {} \\'&gt;&gt; {}{}'.format(getpass(prompt=prompts[1]), homeDir + os.sep, netrc_name), shell=True)\n#     # Set restrictive permissions\n#     Popen('chmod 0600 {0}{1}'.format(homeDir + os.sep, netrc_name), shell=True)\n\n# gesdisc_s3 = \"https://data.gesdisc.earthdata.nasa.gov/s3credentials\"\n\n# # Define a function for S3 access credentials\n\n# def begin_s3_direct_access(url: str=gesdisc_s3):\n#     response = requests.get(url).json()\n#     return s3fs.S3FileSystem(key=response['accessKeyId'],\n#                              secret=response['secretAccessKey'],\n#                              token=response['sessionToken'],\n#                              client_kwargs={'region_name':'us-west-2'})\n\n# fs = begin_s3_direct_access()\n\n\n# fn = 's3://gesdisc-cumulus-prod-protected/MERRA2/M2T1NXSLV.5.12.4/2019/03/MERRA2_400.tavg1_2d_slv_Nx.20190313.nc4'\n\n# fs.info(fn)\n# fs.ls('s3://gesdisc-cumulus-prod-protected/MERRA2/')",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#querying-the-stac-api",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#querying-the-stac-api",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Querying the STAC API",
    "text": "Querying the STAC API\nSearch for the LPJ Wetland Methane Emissions Data using the Raster API and its STAC collection name!\n\n# Provide STAC and RASTER API endpoints\nSTAC_API_URL = \"http://ghg.center/api/stac\"\nRASTER_API_URL = \"https://ghg.center/api/raster\"\n\n\n# Please use the collection name similar to the one used in STAC collection\n# Name of the collection for wetland methane monthly emissions \ncollection_name = \"lpjwsl-wetlandch4-monthgrid-v1\"\n\n\n# Fetching the collection from STAC collections using appropriate endpoint\n# The 'requests' library allows a HTTP request possible\ncollection = requests.get(f\"{STAC_API_URL}/collections/{collection_name}\").json()\ncollection\n\nHere we are examining the contents of our collection under summaries. We notice the data is available from January 1980 to May 2021. By looking at dashboard: time density, we can see that these observations are collected monthly.\n\n# Create a function that would search for the number of items in above data collection in the STAC API\ndef get_item_count(collection_id):\n    count = 0\n    items_url = f\"{STAC_API_URL}/collections/{collection_id}/items\"\n\n    while True:\n        response = requests.get(items_url)\n\n        if not response.ok:\n            print(\"error getting items\")\n            exit()\n\n        stac = response.json()\n        count += int(stac[\"context\"].get(\"returned\", 0))\n        next = [link for link in stac[\"links\"] if link[\"rel\"] == \"next\"]\n\n        if not next:\n            break\n        items_url = next[0][\"href\"]\n\n    return count\n\n\n# Check total number of items available\nnumber_of_items = get_item_count(collection_name)\nitems = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\nprint(f\"Found {len(items)} items\")\n\n\n# Examining the first item in the collection\n# Keep in mind that a list starts from 0, 1, 2,... therefore ‘[0]’ is referring to the first item in the list/collection \nitems[0]\n\nBelow, we enter minimum and maximum values to provide our upper and lower bounds in ‘rescale_values.’",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#search-for-merra-2-data",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#search-for-merra-2-data",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Search for MERRA-2 Data",
    "text": "Search for MERRA-2 Data\n\ndata_dir = f\"{os.getenv('HOME')}/shared/data/use-case-2\"   \nmerra_t2m_dir=f'{data_dir}/merra_t2m_dir/'\nmerra_soil_moisture_dir = f'{data_dir}/merra_soil_moisture_dir/'\nmerra_precip_rate_dir = f'{data_dir}/merra_precip_rate_dir/'\nmerra_t2m_clim_dir = f'{data_dir}/merra_t2m_clim_dir/'\n\nmerra_precip_rate_clim_dir = merra_t2m_clim_dir \nmerra_soil_moisture_clim_dir = merra_t2m_clim_dir",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#define-the-spatial-region-of-interest",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#define-the-spatial-region-of-interest",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Define the Spatial Region of Interest",
    "text": "Define the Spatial Region of Interest\nFor this example, our spatial region of interest (ROI) will be a region in the state of Louisiana (LA). In this example, we will create a rectangular ROI. The state of Louisiana encompasses a diverse range of non-tidal and tidal freshwater wetlands including palustrine, lacustrine, riverine, estuarine, and marine wetlands. These ecosystems cover roughly one-third of the state according to the U.S. Fish and Wildlife Service, making Louisiana an ideal site for monitoring the natural source of methane emissions.\n\n# We create a area of interest (polygon) on which will be used later \n\nboundaries={\n    'Global':[-180,180,-90,90],\n    'Louisiana': [-95.9,-87.50,28.7,33.5],\n    'CONUS':[-127.08,-63.87,23.55,49.19],   #   conus\n    'Florida':[-84.07,-79.14,24.85,30.5],\n    'Northeast':[-74.88,-69.81,40.48,42.88]\n}\nfocus = 'Louisiana'\n\naoi = boundaries[focus]\nlouisiana_aoi = {\n    \"type\": \"Feature\",\n    \"properties\": {},\n    \"geometry\": {\n        \"coordinates\": [\n            [\n                [aoi[0], aoi[2]], # SW Bounding Coordinate\n                [aoi[0], aoi[3]], # NW Bounding Coordinate\n                [aoi[1], aoi[3]], # NE Bounding Coordinate\n                [aoi[1],aoi[2]],  # SE Bounding Coordinate\n                [aoi[0], aoi[2]]  # Closing the polygon at the SW Bounding Coordinate\n            ]\n        ],\n        \"type\": \"Polygon\",\n    },\n}",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-wetland-methane-emissions-data-using-the-raster-api",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-wetland-methane-emissions-data-using-the-raster-api",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Opening and Exploring Wetland Methane Emissions Data Using the Raster API",
    "text": "Opening and Exploring Wetland Methane Emissions Data Using the Raster API\nIn this notebook, we will explore the temporal impacts of methane emissions. We will visualize the outputs on a map using folium.\n\n# To access the year value from each item more easily, this will let us query more explicitly by year and month (e.g., 2020-02)\nitems = {item[\"properties\"][\"datetime\"][:7]: item for item in items} \n\n\n# Set the asset value to the appropriate parameter \nasset_name = 'ch4-wetlands-emissions'\n\n\n# Set the minimum and maximum values to provide our upper and lower bounds\nrescale_values = {'max': 2.0, 'min': 0.0}\n\nNow, we will pass the item id, collection name, and rescaling_factor to the Raster API endpoint. We will do this twice, once for May 2020 and again for May 2021, so we can visualize each event independently.\n\n# Set a colormap for the granule\n# Please refer to matplotlib library if you'd prefer choosing a different color ramp (https://matplotlib.org/stable/users/explain/colors/colormaps.html)\ncolor_map = \"magma\" \n\n\ndate1, date2 = '2020-05', '2021-05'\n\n# May 2020 tile\ntile_1 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items[date1]['collection']}&item={items[date1]['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\"\n).json()\ntile_1\n\n\n# May 2021 tile\ntile_2 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items[date2]['collection']}&item={items[date2]['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\ntile_2",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-ch₄-emissions",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-ch₄-emissions",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Visualizing CH₄ Emissions",
    "text": "Visualizing CH₄ Emissions\n\n# We will import folium to map and folium.plugins to allow side-by-side mapping\n# Set initial zoom and center of map for CH₄ Layer\n# Centre of map [latitude,longitude]\nfrom folium.plugins import MousePosition\nmap_ = folium.Map(location=(30,-90), zoom_start=6)\n\n\n# Use the 'TileLayer' library to display the raster layers and adjust the transparency of the layers on the map\n# May 2020\nvis_tile_1 = TileLayer(\n    tiles=tile_1[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.5,\n)\n\n\n# May 2021\nvis_tile_2 = TileLayer(\n    tiles=tile_2[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.5,\n)\n\n\n# Use the SideBySideLayers plugin to compare two layers on the same map\nsbs = folium.plugins.SideBySideLayers(layer_left=vis_tile_1, layer_right=vis_tile_2)\nvis_tile_1.add_to(map_)\nvis_tile_2.add_to(map_)\n\n\n# Load the GeoJSON file representing the state of Louisiana\nfolium.GeoJson(louisiana_aoi, name=\"louisiana, USA\").add_to(map_)\nsbs.add_to(map_)\nMousePosition().add_to(map_)\n\n\n# Visualizing the map\nmap_\n\n\n# We will import folium to map and folium.plugins to add multiple tiles with layer control\n# Defining the breaks in the colormap \ncolormap = cm.LinearColormap(colors = ['#2c115f','#721f81','#b73779','#f1605d','#feb078'], vmin = 0, vmax = 2 )\n\n\n# Add an appropriate caption, in this case it would be gragu of methane per meter squared per day\ncolormap.caption = 'g CH₄/m²/day'\n\n\nnew_date1, new_date2, new_date3 = '2021-05', '2021-06','2021-07'\n# Reading the tiles from raster api\ntile_date_1 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items[new_date1]['collection']}&item={items[new_date1]['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\ntile_date_1\n\n\ntile_date_2 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items[new_date2]['collection']}&item={items[new_date2]['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\ntile_date_2\n\n\ntile_date_3 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items[new_date3]['collection']}&item={items[new_date3]['id']}\"\n    \"&assets=ch4-wetlands-emissions\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\ntile_date_3\n\n\n# Interactive visulaization \nmap_ = folium.Map(location=(30,-90), zoom_start=5)\n\n# May 2021\ntile1 = TileLayer(\n    tiles=tile_date_1[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n    name=new_date1\n)\ntile1.add_to(map_)\n\n# June 2021\ntile2 = TileLayer(\n    tiles=tile_date_2[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n    name=new_date2\n)\ntile2.add_to(map_)\n\n# July 2021\ntile3 = TileLayer(\n    tiles=tile_date_3[\"tiles\"][0],\n    attr=\"GHG\",\n    opacity=0.8,\n    name=new_date3\n)\ntile3.add_to(map_)\n\nfolium.GeoJson(louisiana_aoi, name=\"louisiana, USA\").add_to(map_)\nfolium.LayerControl(collapsed=False,position='bottomleft').add_to(map_)\n\nsvg_style = '&lt;style&gt;svg#legend {font-size: 14px; background-color: white;}&lt;/style&gt;'\nmap_.get_root().header.add_child(folium.Element(svg_style))\nmap_.add_child(colormap)\n\n\n# Visualizing the map\nmap_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-merra-2-data",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#opening-and-exploring-merra-2-data",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Opening and Exploring MERRA-2 Data",
    "text": "Opening and Exploring MERRA-2 Data\nIn this notebook, we will explore the MERRA-2 data. We will visualize the outputs on a map using folium.\n\n# Fetch the MERRA-2 collection from STAC collections using the appropriate endpoint\nitems = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\n\n\n## visualize MERRA-2\n# [-95.9,-87.50,28.7,33.5]\n\n\n# Insert the path to the NetCDF file\nfile_path = f'{data_dir}/merra_t2m_dir/MERRA2_100.instM_2d_asm_Nx.199101.nc4'  # Replace with the path to your NetCDF file\ndataset = nc.Dataset(file_path)\n\n\n# Access coordinates (if needed)\nlatitude = dataset.variables['lat'][:]\nlongitude = dataset.variables['lon'][:]\n\n\n# Access variables\nvariable_name = 'T2M'  # Replace with the variable you want to plot\n# dataset.variables['T2M'][0, 237:248, 135:150]\nvariable_data = dataset.variables['T2M'][0, :,:]\n\n# Close the NetCDF file\n# dataset.close()\n# Plot the data\nplt.imshow(variable_data, origin='lower', cmap='viridis', extent=(longitude.min(), longitude.max(), latitude.min(), latitude.max()))\nplt.colorbar(label='Variable Unit')\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.title(f'Plot of {variable_name}')\nplt.show()\n\n\nprint('variables provided in this netcdf are:', dataset.variables)",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-line-plots-for-the-methane-emission-based-on-observations-collected-in-2020-and-2021",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-line-plots-for-the-methane-emission-based-on-observations-collected-in-2020-and-2021",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Generate Statistics and Time Series Line Plots for the Methane Emission based on observations collected in 2020 and 2021",
    "text": "Generate Statistics and Time Series Line Plots for the Methane Emission based on observations collected in 2020 and 2021\n\n# The bounding box should be passed to the geojson param as a geojson Feature or FeatureCollection\n# The following function generates statistics for the assigned parameter \ndef generate_stats(item, geojson):\n    result = requests.post(\n        f\"{RASTER_API_URL}/cog/statistics\",\n        paragu={\"url\": item[\"assets\"][\"ch4-wetlands-emissions\"][\"href\"]},\n        json=geojson,\n    ).json()\n    return {\n        **result[\"properties\"],\n        \"datetime\": item[\"properties\"][\"datetime\"],\n    }\n\nWith the function above, we can generate the statistics for the area of interest.\n\n# Default value is to fetch the data for the past 2 years (2020, 2021). You can change the indices to fetch the values for years beyond that.\nstats = [generate_stats(item, louisiana_aoi) for item in items[:24]]\nstats\n\n\n# Manipulating and cleaning the stats output from previous cell\ndef clean_stats(stats_json) -&gt; pd.DataFrame:\n    df = pd.json_normalize(stats_json)\n    df.columns = [col.replace(\"statistics.b1.\", \"\") for col in df.columns]\n    df[\"date\"] = pd.to_datetime(df[\"datetime\"])\n    return df\n\n\ndf = clean_stats(stats)\ndf.head(5)\n\n\n# Filtering the stats for year 2020 and 2021\ndf_2020_2021 = df[(df['date'].dt.year == 2020) | (df['date'].dt.year == 2021)]\ndf_2020_2021['year'] = pd.to_datetime(df_2020_2021['datetime']).dt.year\ndf_2020_2021['month'] = pd.to_datetime(df_2020_2021['datetime']).dt.month\ndf_2020_2021",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Visualizing the Data as a Time Series",
    "text": "Visualizing the Data as a Time Series\nWe can now plot the time-series of the wetland methane emissions for the state of Louisiana for the 2020-2021 (January - December) period.\n\nitems = {item[\"properties\"][\"datetime\"][:7]: item for item in items} \nfig = plt.figure(figsize=(20, 10))\n\n\n# Set the plot elements \nsns.lineplot(\n    df_2020_2021,\n    x = 'month', \n    y = 'sum',\n    hue= 'year',\n    palette='flare'\n)\n\n\n# Set the labels for the X and Y axis and assign a title for the plot \n# plt.legend()\nplt.xlabel(\"months\")\nplt.ylabel(\"CH4 emissions g/m2\")\nplt.title(\"CH4 emission Values for Louisiana for 2020 and 2021\")",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-merra2-data-in-year-2020-2021",
    "href": "sections/use-case-2/lpjwsl-wetlandch4-grid-v1_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-merra2-data-in-year-2020-2021",
    "title": "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes",
    "section": "Generate Statistics and Time Series Lineplots for MERRA2 Data in Year 2020, 2021",
    "text": "Generate Statistics and Time Series Lineplots for MERRA2 Data in Year 2020, 2021\n\nparagu={\n    'MERRA-2 T2M':\n        {'var':'T2M',\n        'cmap':'#000000',\n        'dir':merra_t2m_dir,\n        'nickname':'merra2_t2m',\n        'climdir':merra_t2m_clim_dir,\n        'climvar':'T2MMEAN'},\n    'MERRA-2 Surface Soil Moisture':\n        {'var':'GWETTOP',\n        'cmap':'#000000',\n        'dir':merra_soil_moisture_dir,\n        'nickname':'merra2_sm',\n        'climdir':merra_soil_moisture_clim_dir,\n        'climvar':'GWETTOP'},\n    'MERRA-2 Precipitation Rate':\n        {'var':'PRECTOT',\n        'cmap':'#000000',\n        'dir':merra_precip_rate_dir,\n        'nickname':'merra2_pr',\n        'climdir':merra_precip_rate_clim_dir,\n        'climvar':'PRECTOT'}\n}\n\nyear=1991\n\nanomaly = 1\nparam = ['MERRA-2 Precipitation Rate','MERRA-2 Surface Soil Moisture', 'MERRA-2 T2M' ]\n\n\ndef get_merra2_timeseries(year,focus,p,anomaly):\n    files = glob.glob(paragu[p]['dir']+'*.nc4') # change the year for which you want to read the files\n    if anomaly:\n        try:\n            clim_files = glob.glob(paragu[p]['climdir']+'*.nc4')\n        except:\n            print('Climatological mean files (climdir) not found for specified parameter.')\n            breakpoint()\n    month_labels = []\n    box_totals = []\n    month_field = []\n    dt = []\n    for i,f in enumerate(files):\n        data = nc.Dataset(f)\n        \n        #   Get bounding box\n        wlat = np.logical_and(\n            data['lat'][:] &lt; boundaries[focus][3],\n            data['lat'][:] &gt; boundaries[focus][2]\n        )\n        wlon = np.logical_and(\n            data['lon'][:] &lt; boundaries[focus][1],\n            data['lon'][:] &gt; boundaries[focus][0]\n        )\n\n        datestamp = f.split('.')[-2]\n        month = int(datestamp[-2::])\n\n        dt.append(datetime(year,month,1))\n        month_labels.append(datetime(year,month,1).strftime('%B'))\n\n        if anomaly:\n            #   Make sure you read the climatology for the right month (whichfile)\n            whichfile = [datetime(1991,month,1).strftime('%y%m')[1:] in f for f in clim_files] # Change the year for the data being used.\n            climdata = nc.Dataset(np.array(clim_files)[whichfile][0])\n            \n            #   Calculate sum (emissions) or mean (met paragu) over your bounding box\n            if 'LPJ' in p:\n                clim_box_total = np.nansum(climdata[paragu[p]['climvar']][0,wlat,wlon])\n                now_box_total = np.nansum(data[paragu[p]['var']][0,wlat,wlon])\n            elif 'MERRA' in p:\n                clim_box_total = np.nanmean(climdata[paragu[p]['climvar']][0,wlat,wlon])\n                now_box_total = np.nanmean(data[paragu[p]['var']][0,wlat,wlon])\n\n            #   Replace fill values with NaN \n            #   Otherwise differencing might give wild results? (Just be safe)\n            wfillclim = np.where(climdata[paragu[p]['climvar']][0,:,:] == climdata[paragu[p]['climvar']]._FillValue)\n            climfield = climdata[paragu[p]['climvar']][0,:,:]\n            climfield[wfillclim] = np.nan\n            wfillnow = np.where(data[paragu[p]['var']][0,:,:] == data[paragu[p]['var']]._FillValue)\n            nowfield = data[paragu[p]['var']][0,:,:]\n            nowfield[wfillnow] = np.nan\n\n            #   And finally, difference current month and long-term mean \n            box_totals.append(now_box_total - clim_box_total)\n            month_field.append(nowfield - climfield)\n            climdata.close()\n        else:\n            if 'LPJ' in p:\n                box_totals.append(np.nansum(data[paragu[p]['var']][0,wlat,wlon]))\n            elif 'MERRA' in p:\n                box_totals.append(np.nanmean(data[paragu[p]['var']][0,wlat,wlon]))\n            #   Replace fill values with NaN (otherwise maps are hard to read) \n            month_field.append(data[paragu[p]['var']][0,:,:])\n            wfill = np.where(month_field[-1] == data[paragu[p]['var']]._FillValue)\n            month_field[-1][wfill] = np.nan\n            #breakpoint()\n\n    #   Sort in case months are out of order\n    dti = np.argsort(dt)\n    month_labels = np.array(month_labels)[dti]\n    box_totals = np.array(box_totals)[dti]\n    month_field = np.array(month_field)[dti]\n\n    # print('mean ',np.nanmean(month_field))\n    # print('std ',np.nanstd(month_field))\n\n    data_return = {\n        'month_labels':month_labels,\n        'box_totals':box_totals,\n        'month_fields':month_field,\n        'units':data[paragu[p]['var']].units,\n        'lat':data['lat'][:],\n        'lon':data['lon'][:],\n        'mean':np.nanmean(month_field),\n        'std' : np.nanstd(month_field)\n    }\n    data.close()\n    return data_return \n\n\n# List of color codes assigned\ncolors = ['#1B8FB5', '#16B573', '#C76B21']\nfor i,p in enumerate(param):\n    \n    ts = get_merra2_timeseries(year,focus,p,anomaly)\n    print(f'Mean of variable {p} is {ts[\"mean\"]}')\n    print(f'Standard deviation of variable {p} is {ts[\"std\"]}')\n        \n    # if i == 0:\n    fig= plt.figure(figsize=(6,3))\n    ax = fig.add_subplot(1,1,1)\n\n    #breakpoint()\n    try:\n        ax.plot(\n            list(range(0,12)),\n            ts['box_totals'],\n            linestyle='-',\n            linewidth=2,\n            color=colors[i],\n            markersize=4,\n            marker='o',\n            label=p\n        )\n    except ValueError:\n        print('Double check that you have all twelve months of MERRA-2 data downloaded!')\n        print(paragu[p]['dir'])\n        breakpoint()\n\n    #   Construct plot title\n    title = '%s\\n%s Mean Monthly %s'%(focus,year,p)\n    if anomaly:\n        title+=' Anomaly' \n    if 'LPJ' in p:\n        title = title.replace('Mean','Total')\n    plt.title(title)\n    \n    plt.xticks(list(range(0,12)))\n    ax.set_xticklabels(ts['month_labels'],rotation=40,ha='right')\n\n\n    ax.legend(loc='best')\n    nickname = paragu[p]['nickname']\n    savename = 'box_summed_%s_%s_%s.png'% \\\n        (nickname,year,focus)\n    if anomaly:\n        ax.plot(list(range(-1,13)),np.zeros(14),linewidth=0.4)\n        savename = savename.replace('.png','_Anomaly.png')\n    ax.set_xlim(-1,12)\n    ax.set_ylim(min(ts['box_totals']),max(ts['box_totals']))     #   manual per parameter\n    plt.show()\n    plt.savefig(savename.split('/')[-1],dpi=300,bbox_inches='tight')",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 2 - Use of the Hub and Jupyter Notebooks",
      "Interactive Session: Complementing anthropogenic GHG emissions with natural GHG emissions and fluxes"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "",
    "text": "The gridded EPA U.S. anthropogenic methane greenhouse gas inventory (gridded GHGI) includes spatially disaggregated (0.1 deg x 0.1 deg or approximately 10 x 10 km resolution) maps of annual anthropogenic methane emissions (for the contiguous United States (CONUS), consistent with national annual U.S. anthropogenic methane emissions reported in the U.S. EPA Inventory of U.S. Greenhouse Gas Emissions and Sinks (U.S. GHGI). This V2 Express Extension dataset contains methane emissions provided as fluxes, in units of molecules of methane per square cm per second, for over 25 individual emission source categories, including those from agriculture, petroleum and natural gas systems, coal mining, and waste. The data have been converted from their original NetCDF format to Cloud-Optimized GeoTIFF (COG) for use in the US GHG Center, thereby enabling user exploration of spatial anthropogenic methane emissions and their trends.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#about-the-data",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#about-the-data",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "",
    "text": "The gridded EPA U.S. anthropogenic methane greenhouse gas inventory (gridded GHGI) includes spatially disaggregated (0.1 deg x 0.1 deg or approximately 10 x 10 km resolution) maps of annual anthropogenic methane emissions (for the contiguous United States (CONUS), consistent with national annual U.S. anthropogenic methane emissions reported in the U.S. EPA Inventory of U.S. Greenhouse Gas Emissions and Sinks (U.S. GHGI). This V2 Express Extension dataset contains methane emissions provided as fluxes, in units of molecules of methane per square cm per second, for over 25 individual emission source categories, including those from agriculture, petroleum and natural gas systems, coal mining, and waste. The data have been converted from their original NetCDF format to Cloud-Optimized GeoTIFF (COG) for use in the US GHG Center, thereby enabling user exploration of spatial anthropogenic methane emissions and their trends.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#requirements",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#requirements",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Requirements",
    "text": "Requirements\n\nSet up Python Environment - See setup_instructions.md in the /setup/ folder",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#learning-objectives",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#learning-objectives",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nHow to use U.S. GHG Center STAC Catalog to access U.S. Gridded Anthropogenic Methane Emissions Inventory data\nHow to visualize a dataset using folium and perform zonal statistics",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#approach",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#approach",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Approach",
    "text": "Approach\n\nIdentify available dates and temporal frequency of observations for the given collection using the GHGC API /stac endpoint. The collection processed in this notebook is the gridded methane emissions data product.\nPass the STAC item into the raster API /stac/tilejson.jsonendpoint.\nUsing folium.plugins.DualMap, we will visualize two tiles (side-by-side), allowing us to compare time points.\nAfter the visualization, we will perform zonal statistics for a given polygon.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#define-the-spatial-region-of-interest",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#define-the-spatial-region-of-interest",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Define the Spatial Region of Interest",
    "text": "Define the Spatial Region of Interest\nFor this example, our spatial region of interest (ROI) will be the Permian Basin, USA. The Permian Basin is a regional depression expanding from the eastern side of New Mexico to West Texas, covering roughly 75 thousand square miles of land. This region is known to be “the largest hydrocarbon-producing basins in the United States and the world” according to the U.S. Energy Information Administration. Consequently, the Permian Basin is prone to excessive air pollution and a suitable site for monitoring anthropogenic methane emissions.\n\n# Loading Permian Basin shape file as a ROI\n# User can pass any json or shape file here\n# The \"geopandas\" library makes working with geospatial data easier by facilitating spatial operations on geometric types  \ndata_dir = f\"{os.getenv('HOME')}/shared/data\"\npermian_basin = geopandas.read_file(f'{data_dir}/use-case-3/Permian.zip')",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#querying-the-stac-api",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#querying-the-stac-api",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Querying the STAC API",
    "text": "Querying the STAC API\nSearch for U.S. Gridded Anthropogenic Methane Emissions Inventory Data\n\n# Provide STAC and RASTER API endpoints\nSTAC_API_URL = \"http://ghg.center/api/stac\"\nRASTER_API_URL = \"https://ghg.center/api/raster\"\n\n# Please use the collection name similar to the one used in STAC collection.\n# Name of the collection for gridded methane dataset. \ncollection_name = \"epa-ch4emission-yeargrid-v2express\"\n\n\n# Fetching the collection from STAC collections using appropriate endpoint.\ncollection = requests.get(f\"{STAC_API_URL}/collections/{collection_name}\").json()\ncollection\n\nExamining the contents of our collection under the temporal variable, we see that the data is available from January 2012 to December 2020. By looking at the dashboard:time density, we observe that the periodic frequency of these observations is yearly.\n\n# Create a function that would search for the number of items in above data collection in the STAC API\ndef get_item_count(collection_id):\n    count = 0\n    items_url = f\"{STAC_API_URL}/collections/{collection_id}/items\"\n\n    while True:\n        response = requests.get(items_url)\n\n        if not response.ok:\n            print(\"error getting items\")\n            exit()\n\n        stac = response.json()\n        count += int(stac[\"context\"].get(\"returned\", 0))\n        next = [link for link in stac[\"links\"] if link[\"rel\"] == \"next\"]\n\n        if not next:\n            break\n        items_url = next[0][\"href\"]\n\n    return count\n\n\n# Check total number of items available\nnumber_of_items = get_item_count(collection_name)\nitems = requests.get(f\"{STAC_API_URL}/collections/{collection_name}/items?limit={number_of_items}\").json()[\"features\"]\nprint(f\"Found {len(items)} items\")\n\n\n# Examining the first item in the collection\n# Keep in mind that a list starts from 0, 1, 2,... therefore ‘[0]’ is referring to the first item in the list/collection \nitems[0]",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#opening-and-exploring-methane-emissions-using-the-raster-api",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#opening-and-exploring-methane-emissions-using-the-raster-api",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Opening and Exploring Methane Emissions Using the Raster API",
    "text": "Opening and Exploring Methane Emissions Using the Raster API\nIn this notebook, we will explore the temporal impacts of methane emissions. We will visualize the outputs on a map using folium.\n\n# To access the year value from each item more easily, this will let us query more explicity by year and month (e.g., 2020-02)\nitems = {item[\"properties\"][\"datetime\"][:7]: item for item in items} \n\n# Set the asset values to the appropriate parameters\nasset_name_1 = \"production-ngs\"\nasset_name_2 = 'production-ps'\nasset_name_3 = 'total-methane'\n\n\n# Below, we are entering the minimum and maximum values to provide our upper and lower bounds\nrescale_values = {'max': 20,'min': 0}\n\n\n# Examining the items in the collection\nitems\n\nNow, we will pass the item id, collection name, and rescaling_factor to the Raster API endpoint. We will do this twice, once for January 2018 and again for January 2012, so that we can visualize each event independently.\n\n# Set a colormap for the granule\n# Please refer to matplotlib library if you'd prefer choosing a different color ramp (https://matplotlib.org/stable/users/explain/colors/colormaps.html)\ncolor_map = \"rainbow\" \n\n# Petroleum-Production Methane Emissions\n\n# Extract and display the January 2018 tile using the appropriate ID, colormap, rescale values, and datetime (items['2018-01']) \n\njanuary_2018_tile_ps = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2018-01']['collection']}&item={items['2018-01']['id']}\"\n    f\"&assets={asset_name_1}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\n\n# Print the information associated with this tile\njanuary_2018_tile_ps\n\njanuary_2012_tile_ps = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2012-01']['collection']}&item={items['2012-01']['id']}\"\n    f\"&assets={asset_name_1}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2012_tile_ps\n\n\n# Natural Gas-Production Methane Emissions\n\ncolor_map = \"rainbow\" # please select the color ramp from matplotlib library.\njanuary_2018_tile_ngs = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2018-01']['collection']}&item={items['2018-01']['id']}\"\n    f\"&assets={asset_name_2}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2018_tile_ngs\n\njanuary_2012_tile_ngs = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2012-01']['collection']}&item={items['2012-01']['id']}\"\n    f\"&assets={asset_name_2}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2012_tile_ngs\n\n\n# Total Methane Emissions\n\ncolor_map = \"rainbow\" # please select the color ramp from matplotlib library.\njanuary_2018_tile_tm = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2018-01']['collection']}&item={items['2018-01']['id']}\"\n    f\"&assets={asset_name_3}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2018_tile_tm\n\njanuary_2012_tile_tm = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items['2012-01']['collection']}&item={items['2012-01']['id']}\"\n    f\"&assets={asset_name_3}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values['min']},{rescale_values['max']}\", \n).json()\njanuary_2012_tile_tm",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-petroleum--production-annual-ch₄-emissions",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-petroleum--production-annual-ch₄-emissions",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Visualizing Petroleum- Production (annual) CH₄ emissions",
    "text": "Visualizing Petroleum- Production (annual) CH₄ emissions\n\n# Set initial zoom and center of map for CH₄ Layer\n# Centre of map [latitude,longitude]\nmap_ = folium.plugins.DualMap(location=(32, -102), zoom_start=6)\n\n# January 2018\nmap_layer_2018 = TileLayer(\n    tiles=january_2018_tile_ps[\"tiles\"][0],\n    name = 'Petroleum production for 2018',\n    attr=\"GHG\",\n    opacity=0.7,\n)\nmap_layer_2018.add_to(map_.m1)\n\n# January 2012\nmap_layer_2012 = TileLayer(\n    tiles=january_2012_tile_ps[\"tiles\"][0],\n    name = 'Petroleum production for 2012',\n    attr=\"GHG\",\n    opacity=0.7,\n)\nmap_layer_2012.add_to(map_.m2)\n\n# Load the GeoJSON file for the Permian Basin\nmap_layer_permian = folium.GeoJson(permian_basin, name= 'Permian Shape')\nmap_layer_permian.add_to(map_)\n\n# Adjust map elements\nfolium.LayerControl(collapsed=True, position='bottomleft').add_to(map_)\n# visualising the map\nmap_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-natural-gas---production-annual-ch₄-emissions",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-natural-gas---production-annual-ch₄-emissions",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Visualizing Natural Gas - Production (annual) CH₄ emissions",
    "text": "Visualizing Natural Gas - Production (annual) CH₄ emissions\n\nmap_ = folium.plugins.DualMap(location=(32, -102), zoom_start=6)\n\n# January 2018\nmap_layer_2018 = TileLayer(\n    tiles=january_2018_tile_ngs[\"tiles\"][0],\n    name = 'Natural Gas production for 2018',\n    attr=\"GHG\",\n    opacity=0.7,\n)\nmap_layer_2018.add_to(map_.m1)\n\n# January 2012\nmap_layer_2012 = TileLayer(\n    tiles=january_2012_tile_ngs[\"tiles\"][0],\n    name = 'Natural Gas Production for 2012',\n    attr=\"GHG\",\n    opacity=0.7,\n)\nmap_layer_2012.add_to(map_.m2)\n\nmap_layer_permian = folium.GeoJson(permian_basin, name= 'Permian Shape')\nmap_layer_permian.add_to(map_)\nfolium.LayerControl(collapsed=True, position='bottomleft').add_to(map_)\n\n# visualising the map\nmap_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-total-ch₄-emissions",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-total-ch₄-emissions",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Visualizing Total CH₄ emissions",
    "text": "Visualizing Total CH₄ emissions\n\n# We will import folium to map and folium.plugins to allow side-by-side mapping\nimport folium\nimport folium.plugins\n\n# Set initial zoom and center of map for CH₄ Layer\n# Centre of map [latitude,longitude]\nmap_ = folium.plugins.DualMap(location=(32, -102), zoom_start=6)\n\n# January 2018\nmap_layer_2018 = TileLayer(\n    tiles=january_2018_tile_tm[\"tiles\"][0],\n    attr=\"GHG\",\n    name = 'Total methane emissions for 2018',\n    opacity=0.7,\n)\nmap_layer_2018.add_to(map_.m1)\n\n# January 2012\nmap_layer_2012 = TileLayer(\n    tiles=january_2012_tile_tm[\"tiles\"][0],\n    name= 'Total methane emissions for 2012',\n    attr=\"GHG\",\n    opacity=0.7,\n)\nmap_layer_2012.add_to(map_.m2)\n\nmap_layer_permian = folium.GeoJson(permian_basin, name= 'Permian Shape')\nmap_layer_permian.add_to(map_)\nfolium.LayerControl(collapsed=True, position='bottomleft').add_to(map_)\n# visualising the map\nmap_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "href": "sections/use-case-1/epa-ch4emission-grid-v2express_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "title": "Interactive Session: Human Anthropogenic Emissions (EPA)",
    "section": "Visualizing the Data as a Time Series",
    "text": "Visualizing the Data as a Time Series\nWe can now explore the total gridded methane emission time series (January 2000 -December 2021) available for the Permian Basin area of the U.S. We can plot the data set using the code below:\n\nfig = plt.figure(figsize=(20, 10))\n\n# Set the plot elements\nplt.plot(\n    df[\"date\"],\n    df[\"max\"],\n    color=\"red\",\n    linestyle=\"-\",\n    linewidth=0.5,\n    label=\"Max monthly CO₂ emissions\",\n)\n\n# Set the labels for the X and Y axis and assign a title for the plot \nplt.legend()\nplt.xlabel(\"Years\")\nplt.ylabel(\"CH4 emissions Molecules CH₄/cm²/s\")\nplt.title(\"Total CH4 gridded methane emission for Permian Basin (2012-2018)\")",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (EPA)"
    ]
  },
  {
    "objectID": "sections/use-case-1/index.html",
    "href": "sections/use-case-1/index.html",
    "title": "Use of Portal Data Toolkit Interfaces and Tools",
    "section": "",
    "text": "Click here to access the slides.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Use of Portal Data Toolkit Interfaces and Tools"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "",
    "text": "📅 Jan 28, 2024, 🕣 01:00 PM - 04:30 PM EST, 📍 Walter E. Washington Convention Center\n🔗 Session on the AGU Website",
    "crumbs": [
      "Home",
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Description",
    "text": "Description\nThis half-day workshop will provide hands-on practice to efficiently use the U.S. Greenhouse Gas Center (US GHG Center) portal key datasets, open-source tools, and computing resources for exploring, visualizing, analyzing and communicating science related to greenhouse gases.\nThe US GHG Center was created to provide curated, trusted greenhouse gas data and information via a user interface, QGIS or cloud computing environment to make it easier to access, use and understand data from one centralized location regardless of data producer or data storage location. The GHG Center portal provides cloud optimized access to a growing set of federal and non-federal data. The contents reflect transparency in both data and methods, to address different end user needs and to bring together actionable information from multiple sources.\nWorkshop activities encompass exploration of several science questions and activities using the US GHG Center services and tools. Participants will learn from GHG specialists about the latest science or policies that can be identified in the data for a given region or location. Attendees will produce trends over time, visually compare data from selected times, utilize code notebooks to compare datasets and develop detailed figures and comparison charts and to summarize and share results. Example python code will be provided so that users can gain practice at using and adapting the open code and focus more on the activity than on building new code given the time limitations.",
    "crumbs": [
      "Home",
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nUpon completing this workshop, participants will be able to: 1. Understand what GHG products are available in the US GHG Center portal and use the data to answer scientific questions 2. Use the US GHG Center portal to explore and compare existing datasets and data layers 3. Employ Jupyter notebooks to perform data analysis and visualization of Earth science data in the cloud 4. Gain understanding of GIS workflows 5. Produce visualizations and images for a report summarizing the activity and knowledge gained 6. Understand principles for contributing to open-sourced software projects",
    "crumbs": [
      "Home",
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#target-audience",
    "href": "index.html#target-audience",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Target Audience",
    "text": "Target Audience\nThe target audience for this workshop includes Earth Science researchers, educators, and students across all career stages and disciplines who are interested in utilizing GHG datasets and open-source tools for their research projects. The workshop will be beneficial for both experienced programmers seeking an overview of modern open tools and those just getting started with scientific programming.",
    "crumbs": [
      "Home",
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "Utilizing Open Science Techniques for Exploring Greenhouse Gas Data",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nThis workshop will be held following the Transform to Open Science Code of Conduct.",
    "crumbs": [
      "Home",
      "Welcome"
    ]
  },
  {
    "objectID": "team.html",
    "href": "team.html",
    "title": "Speakers",
    "section": "",
    "text": "Speakers\n\nShanna Combley 1\nArgie Kavvada 1\nSlesa Adhikari 2\nSid Chaudhary 2\nLesley Ott 3\nRob Green 4\nAnnmarie Eldering 5\nTom Oda 6\n\n\n\nSupport Team\n\nGeneral Support\n\nDeborah Smith 2\nSid Chaudhary 2\nAlix Kashdan 1\n\n\n\nInteractive Sessions\n\nEmily Bell 3\nColin Quinn 3\nThomas Coligan 3\n\n\n1 National Aeronautics and Space Administration (NASA) Headquarters, 2 University of Alabama in Huntsville (UAH), 3 NASA Goddard Space Flight Center (GSFC), 4 NASA Jet Propulsion Laboratory, 5 National Institute of Standards and Technology, 6 Universities Space Research Association (USRA)"
  },
  {
    "objectID": "setup/prerequisites.html",
    "href": "setup/prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "Prerequisites\nTo follow along during the workshop, or to run through the notebooks contained within the repository using the 2i2c Cloud JupyterHub (cloud workspace), the following are required. All software or accounts are free.\n\nEarthdata Login account\n\nCreate an Earthdata Login account (if you don’t already have one) at https://urs.earthdata.nasa.gov/users/new\nRemember your username and password; you will need them to download or access data during the workshop and beyond.\n\nGitHub username\n\nCreate a GitHub account (if you don’t already have one) at https://github.com/join. Follow optional advice on choosing your username\nYour GitHub username is used to enable you access to a cloud environment during the workshop. To gain access, please request access to the NASA Openscapes JupyterHub using this form. You will receive an email invitation to join the organization on GitHub. You must join to gain access to the workspace.\n\n\nNetrc file\n\nThis file is needed to access NASA Earthdata assets from a scripting environment like Python.\nThere are multiple methods to create a .netrc file. For this workshop, earthaccess package is used to automatically create a netrc file using your Earthdata login credentials if one does not exist. There are detailed instruction available for creating a .netrc file.\nYou will need a netrc file containing your NASA Earthdata Login credentials in order to execute the notebooks. A netrc file can be created manually within text editor and saved to your home directory. An example of the required content is below.\n\nmachine urs.earthdata.nasa.gov\nlogin &lt;USERNAME&gt;\npassword &lt;PASSWORD&gt;\nLaptop or tablet\n\nParticipation in the exercises requires a laptop or tablet. Yes, a tablet works too! All workshop participants will have access to a 2i2c Jupyter Lab instance."
  },
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "Participants are expected to have a basic knowledge of the python programming language.\nParticipants MUST obtain the following to be able to follow along the workshop:\n\nUS GHG Center JupyterHub Access\nEarthdata credentials\n\n\n\n🚨 Please make sure you have both of the accesses before you come to the workshop on Sunday.\n\n\n\nThe US GHG Center notebook environment is available to authorized users on an as-need basis. You can request access by using our Hub Access Request form.\n\nMake sure you have a GitHub Account. Take note of your GitHub username.\nFill out the request form and provide needed information. Make sure to use your organization/univerity email and use “AGU Workshop 2024” as the reason.\nWatch your email for notification of authorization and the invite to join the US GHG Center Hub Access GitHub Team.\nOnce you accept the invitation, you can go to hub.ghg.center and login using your GitHub credentials.\n\n\n\n\nFollow the tutorial on this link to register for Earthdata login: https://www.earthdata.nasa.gov/eosdis/science-system-description/eosdis-components/earthdata-login.\nMake sure to note your username and password.",
    "crumbs": [
      "Home",
      "Prerequisites"
    ]
  },
  {
    "objectID": "prerequisites.html#to-get-us-ghg-center-jupyterhub-access",
    "href": "prerequisites.html#to-get-us-ghg-center-jupyterhub-access",
    "title": "Prerequisites",
    "section": "",
    "text": "The US GHG Center notebook environment is available to authorized users on an as-need basis. You can request access by using our Hub Access Request form.\n\nMake sure you have a GitHub Account. Take note of your GitHub username.\nFill out the request form and provide needed information. Make sure to use your organization/univerity email and use “AGU Workshop 2024” as the reason.\nWatch your email for notification of authorization and the invite to join the US GHG Center Hub Access GitHub Team.\nOnce you accept the invitation, you can go to hub.ghg.center and login using your GitHub credentials.",
    "crumbs": [
      "Home",
      "Prerequisites"
    ]
  },
  {
    "objectID": "prerequisites.html#to-obtain-earthdata-credentials",
    "href": "prerequisites.html#to-obtain-earthdata-credentials",
    "title": "Prerequisites",
    "section": "",
    "text": "Follow the tutorial on this link to register for Earthdata login: https://www.earthdata.nasa.gov/eosdis/science-system-description/eosdis-components/earthdata-login.\nMake sure to note your username and password.",
    "crumbs": [
      "Home",
      "Prerequisites"
    ]
  },
  {
    "objectID": "ghg-center-at-agu-2024.html",
    "href": "ghg-center-at-agu-2024.html",
    "title": "The US GHG Center at American Geophysical Union Annual Meeting 2024",
    "section": "",
    "text": "Join members of the GHG Center team for several events at the 2024 AGU Annual Meeting at Washington D.C.; December 9th - December 13th"
  },
  {
    "objectID": "ghg-center-at-agu-2024.html#short-course",
    "href": "ghg-center-at-agu-2024.html#short-course",
    "title": "The US GHG Center at American Geophysical Union Annual Meeting 2024",
    "section": "Short Course",
    "text": "Short Course\nAdvancing Open Science: An Interactive Workshop on Harnessing VEDA for Earth Science Research at the U.S. Greenhouse Gas Center\n📅 Dec 08, 2024, 🕣 01:00 PM - 04:30 PM EST, 📍 Walter E. Washington Convention Center\nLearn how to effectively analyze and visualize Earth science data in the cloud using open-source tools and datasets [Jan 28, room ]."
  },
  {
    "objectID": "ghg-center-at-agu-2024.html#town-hall",
    "href": "ghg-center-at-agu-2024.html#town-hall",
    "title": "The US GHG Center at American Geophysical Union Annual Meeting 2024",
    "section": "Town Hall",
    "text": "Town Hall\nU.S. Greenhouse Gas Center: Listening Session.\n📅 Dec 08, 2024, 🕣 01:00 PM - 04:30 PM EST, 📍 Walter E. Washington Convention Center\nCome share your thoughts and see a demonstration of the US GHG Center. Upcoming developments and opportunities will be presented. [Dec 08, room Holiday 5 at 📍 Walter E. Washington Convention Center]."
  },
  {
    "objectID": "ghg-center-at-agu-2024.html#presentations",
    "href": "ghg-center-at-agu-2024.html#presentations",
    "title": "The US GHG Center at American Geophysical Union Annual Meeting 2024",
    "section": "Presentations",
    "text": "Presentations\nMultiple presentations by GHG Center team members will occur throughout the week. Stop by to hear more from GHG Center team members!\n\n\n\n\n\n\n\n\nWhen\nRoom\nPresentation Title\n\n\n\n\nTues, Jan 30 4:45\nHoliday 5\nHilton Baltimore Inner Harbor\n8A.2 Stakeholder Engagement for the US Greenhouse Gas Center (Combley)\n\n\nMon, Jan 29 5:15\n336\nThe Baltimore Convention Center\nJ4B.4 Developing a Cross-Institutional Open-Source Cyberinfrastructure to Explore, Analyze, and Communicate Greenhouse Gas Data and Information (Chaudhary)\n\n\nTues, Jan 30 5:15\nBallroom II\nThe Baltimore Convention Center\nJ8A.4 PPAP’s and NIST’s Urban Greenhouse Gas Measurements Program (Whetstone)\n\n\nWed, Jan 31 5:30\nHoliday 5\nHilton Baltimore Inner Harbor\n12A.5 NIST’s Urban Greenhouse Gas Measurements Program and Interactions with NOAA’s Air Resources Laboratory (Whetstone)\n\n\nMon, Jan 29 11:30\n321/322\nThe Baltimore Convention Center\n2B.4 Methane and Carbon Dioxide Point Source Measurements Across Six Continents from the EMIT Imaging Spectrometer on the International Space Station - and Contributions to the U.S. Greenhouse Gas Center (Green)\n\n\nMon, Jan 29 5:30\n321/322\nThe Baltimore Convention Center\n4B.5 Detectability of Anthropogenic Impacts on Terrestrial Carbon Storage through Space Based Greenhouse Gas Observations (Weir)\n\n\nThur, Feb 1 2:30\nHoliday 4\nHilton Baltimore Inner Harbor\nJ15.4 NOAA Carbon Monitoring, Research and Innovation: Long-Standing Foundation to Support Climate Mitigation (Grubišić)"
  },
  {
    "objectID": "agenda.html",
    "href": "agenda.html",
    "title": "Workshop Agenda",
    "section": "",
    "text": "Workshop Agenda\nThe full-day workshop will be divided into the following sections:\n\n\n\n\n\n\n\n8:00 - 8:15\nWelcome\n\nWelcome message\nWorkshop Introduction\nTeam Introduction\nIcebreaker\n\n\n\n8:15 - 8:45\nOverview of the U.S. Greenhouse Gas Center and the Science\n\nWhat is the US GHG Center?\nRole of Methane and Carbon Dioxide in Climate Change\nWhat is included in the Center and why these datasets\nIntroduction to the science use cases / demonstration areas that will be explored during the workshop\n\n\n\n8:45 - 10:00\nIntroduction to the GHG Center Data Catalog\n\nIntro to the VEDA project and its relevance to Earth Science research and the US GHG Center\nHow do VEDA and US GHG Center support Open Science\nComponents of VEDA/US GHG Center\nHands-on exercise: searching and accessing cloud-optimized datasets using the STAC catalog\n\nIntro to JupyterHub and Jupyter Notebooks\n\nAccess to the JupyterHub environment\nCreating and running a Jupyter Notebook in the hub\n\nUsing the pystac client library to read the US GHG STAC catalog\n\nList all available datasets\nSpatial and temporal search\nAccess assets and visualize them\n\n(Time-permitting) Accessing the US GHG STAC catalog using QGIS on the browser\n\nEstablishing connection to the US GHG STAC catalog using the qgis-stac-plugin in QGIS in the GHG Center JupyterHub environment\nAdding a dataset/asset from the catalog as layer in QGIS\n\n\n\n\n\n10:00 - 10:15\nBREAK\n\n\n10:15 - 11:15\nHuman Anthropogenic Emissions\n\nIntroduction and background of datasets & human anthropogenic emissions\nHands-on exercise: Comparing emissions across sectors and time using EPA Gridded Methane data\nHands-on exercise: ODIAC: Compare to satellite data over time (using OCO-2, OCO-3 DAAC data), introduce intersection with geospatial data\n\n\n\n11:15 - 12:15\nComplementing anthropogenic GHG emissions with natural GHG emissions and fluxes\n\nIntroduction\nDescription of data sets and analysis available via the U.S. GHG Center (e.g., gridded wetland emissions and ecosystem exchange estimates)\nHands-on exercise: Exploring annual U.S. wetland methane emissions and their - meteorological influences.\n\n\n\n12:15 - 1:30\nLUNCH BREAK\n\n\n1:30 - 2:45\nIdentifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data\n\nThe EMIT Instrument: Overview and GHG Applications\nHands-on exercise: Locating enhancement, understanding temporal relevance, exploring site with multiple observations.\n\n\n\n2:45 - 3:15\nOpen Science in Action: Intro to GitHub & Communicating Science Discoveries via Web Dashboard\n\nIntroduction to web dashboards for science communication\nHands-on exercise: creating a web dashboard to communicate science discoveries using the platform\n\n\n\n3:15 - 3:45\nClosing Remarks\n\nFuture Developments and Community Contributions\nEngaging with the U.S. Greenhouse Gas Center\nFeedback\n\n\n\n\nThroughout the workshop, facilitators will be available to provide support and guidance, ensuring participants are able to actively explore the workshop topics and apply their knowledge and skills to their own research projects.",
    "crumbs": [
      "Home",
      "Workshop Agenda"
    ]
  },
  {
    "objectID": "setup/setup_instructions.html",
    "href": "setup/setup_instructions.html",
    "title": "Repository Setup Instructions",
    "section": "",
    "text": "The how-tos and tutorials in this repository require a NASA Earthdata account, an installation of Git, and a compatible Python Environment.\nFor local Python environment setup we recommend using mamba to manage Python packages. To install mamba, download miniforge for your operating system. If using Windows, be sure to check the box to “Add mamba to my PATH environment variable” to enable use of mamba directly from your command line interface. Note that this may cause an issue if you have an existing mamba install through Anaconda.\n\n\nconda create -n veda-ghg\nconda activate veda-ghg\n\n\n\nCheck requirements.txt.\nStill having trouble getting a compatible Python environment set up? Contact U.S.GHGC Team."
  },
  {
    "objectID": "setup/setup_instructions.html#python-environment-setup",
    "href": "setup/setup_instructions.html#python-environment-setup",
    "title": "Repository Setup Instructions",
    "section": "",
    "text": "conda create -n veda-ghg\nconda activate veda-ghg"
  },
  {
    "objectID": "setup/setup_instructions.html#installing-packages",
    "href": "setup/setup_instructions.html#installing-packages",
    "title": "Repository Setup Instructions",
    "section": "",
    "text": "Check requirements.txt.\nStill having trouble getting a compatible Python environment set up? Contact U.S.GHGC Team."
  },
  {
    "objectID": "chapters.html",
    "href": "chapters.html",
    "title": "Chapters",
    "section": "",
    "text": "The flow of the workshop\n\n\n\nIntro to the US GHG Center\nThe US GHG Center Data Catalog (STAC)\nThe US GHG Center JupyterHub environment\n\n\n\n\n\nEPA Gridded Methane Emissions Inventory\nComplementing anthropogenic GHG emissions with natural GHG emissions and fluxes\nIdentifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data\n\n\n\n\n\nIntro to GitHub & Communicating Science Discoveries via Web Dashboard\n\n\nℹ️ Content for each chapter will be added as they are prepared, please check back."
  },
  {
    "objectID": "chapters.html#introduction",
    "href": "chapters.html#introduction",
    "title": "Chapters",
    "section": "",
    "text": "Intro to the US GHG Center\nThe US GHG Center Data Catalog (STAC)\nThe US GHG Center JupyterHub environment"
  },
  {
    "objectID": "chapters.html#science-use-cases",
    "href": "chapters.html#science-use-cases",
    "title": "Chapters",
    "section": "",
    "text": "EPA Gridded Methane Emissions Inventory\nComplementing anthropogenic GHG emissions with natural GHG emissions and fluxes\nIdentifying and quantifying emissions from large point source methane emission events leveraging aircraft and satellite data"
  },
  {
    "objectID": "chapters.html#open-science-in-action",
    "href": "chapters.html#open-science-in-action",
    "title": "Chapters",
    "section": "",
    "text": "Intro to GitHub & Communicating Science Discoveries via Web Dashboard\n\n\nℹ️ Content for each chapter will be added as they are prepared, please check back."
  },
  {
    "objectID": "sections/overview-us-ghg-center/index.html",
    "href": "sections/overview-us-ghg-center/index.html",
    "title": "Overview of the U.S. Greenhouse Gas Center",
    "section": "",
    "text": "Click here to access the slides.",
    "crumbs": [
      "Home",
      "Sections",
      "Overview of the U.S. Greenhouse Gas Center and the Science"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "",
    "text": "The Open-Data Inventory for Anthropogenic Carbon dioxide (ODIAC) is a high-spatial resolution global emission data product of CO₂ emissions from fossil fuel combustion (Oda and Maksyutov, 2011). ODIAC pioneered the combined use of space-based nighttime light data and individual power plant emission/location profiles to estimate the global spatial extent of fossil fuel CO₂ emissions. With the innovative emission modeling approach, ODIAC achieved the fine picture of global fossil fuel CO₂ emissions at a 1x1km.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#about-the-data",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#about-the-data",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "",
    "text": "The Open-Data Inventory for Anthropogenic Carbon dioxide (ODIAC) is a high-spatial resolution global emission data product of CO₂ emissions from fossil fuel combustion (Oda and Maksyutov, 2011). ODIAC pioneered the combined use of space-based nighttime light data and individual power plant emission/location profiles to estimate the global spatial extent of fossil fuel CO₂ emissions. With the innovative emission modeling approach, ODIAC achieved the fine picture of global fossil fuel CO₂ emissions at a 1x1km.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#requirements",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#requirements",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Requirements",
    "text": "Requirements\n\nSet up Python Environment - See setup_instructions.md in the /setup/ folder",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#learning-objectives",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#learning-objectives",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nHow to use U.S. GHG Center STAC Catalogto access ‘ODIAC Fossil Fuel CO₂ Emissions’ and OCO-2 GEOS Column CO₂ Concentrations data.\nHow to use VEDA STAC Catalog to access NO₂ Emissions data.\nHow to visualize datasets using folium and perfom zonal statistics over South Africa.\nHow to plot time series plot for ODIAC and analyze the results.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#approach",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#approach",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Approach",
    "text": "Approach\n\nIdentify available dates and temporal frequency of observations for the given collection using the GHGC API /stac endpoint. Collection processed in this notebook is ODIAC CO₂ emissions version 2022.\nPass the STAC item into raster API /stac/tilejson.json endpoint\nWe’ll visualize two tiles (side-by-side) allowing for comparison of each of the time points using folium.plugins.DualMap\nAfter the visualization, we’ll perform zonal statistics for a given polygon.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#setup",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#setup",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Setup",
    "text": "Setup\nImport the required Python libraries.\n\n# Import required libraries\n\nimport earthaccess\nimport warnings\nimport requests\nimport pandas as pd\nimport os\nos.environ['USE_PYGEOS'] = '0'\nimport geopandas\nimport folium\nimport folium.plugins\nimport seaborn as sns\nimport glob\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport branca.colormap as cm\n\nfrom folium import Map, TileLayer \nfrom branca.element import Figure\nfrom pystac_client import Client \nfrom pyproj import Geod\nfrom shapely import wkt\nfrom datetime import datetime\nfrom folium.plugins import MousePosition",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#querying-the-stac-api",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#querying-the-stac-api",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Querying the STAC API",
    "text": "Querying the STAC API\nSearch for ODIAC Fossil Fuel Co2 Emissions, OCO-2 and NO2 Emissions dataset\n\n# Provide STAC and RASTER API endpoints\nSTAC_API_URL = \"http://ghg.center/api/stac\"\nRASTER_API_URL = \"https://ghg.center/api/raster\"\n\nSTAC_API_URL_veda = \"https://staging-stac.delta-backend.com\"\nRASTER_API_URL_veda = \"https://staging-raster.delta-backend.com\"\n\n#Please use the collection name similar to the one used in STAC collection.\n# Name of the collection for ODIAC dataset. \ncollection_name_odiac = \"odiac-ffco2-monthgrid-v2022\"\ncollection_name_oco = \"oco2geos-co2-daygrid-v10r\"\ncollection_name_no2 = \"no2-monthly\"\n\n\n# Fetching the collection from STAC collections using appropriate endpoint.\ncollection_odiac = requests.get(f\"{STAC_API_URL}/collections/{collection_name_odiac}\").json()\ncollection_odiac\n\ncollection_oco2 = requests.get(f\"{STAC_API_URL}/collections/{collection_name_oco}\").json()\ncollection_oco2\n\ncollection_no2 = requests.get(f\"{STAC_API_URL_veda}/collections/{collection_name_no2}\").json()\ncollection_no2\n\nExamining the contents of our collection under summaries we see that the data is available from January 2000 to December 2021. By looking at the dashboard:time density we observe that the periodic frequency of these observations is monthly.\n\n# Create a function that would search for the number of items in above data collection in the STAC API\n\ndef get_item_count(STAC_API_URL, collection_id):\n    count = 0\n    items_url = f\"{STAC_API_URL}/collections/{collection_id}/items\"\n\n    while True:\n        response = requests.get(items_url)\n\n        if not response.ok:\n            print(\"error getting items\")\n            exit()\n\n        stac = response.json()\n        count += int(stac[\"context\"].get(\"returned\", 0))\n        next = [link for link in stac[\"links\"] if link[\"rel\"] == \"next\"]\n\n        if not next:\n            break\n        items_url = next[0][\"href\"]\n\n    return count\n\n\n# Check total number of items available\nnumber_of_items_odiac = get_item_count(STAC_API_URL,collection_name_odiac)\nitems_odiac = requests.get(f\"{STAC_API_URL}/collections/{collection_name_odiac}/items?limit={number_of_items_odiac}\").json()[\"features\"]\nprint(f\"Found {len(items_odiac)} odiac items\")\n\nnumber_of_items_oco2 = get_item_count(STAC_API_URL,collection_name_oco)\nitems_oco2 = requests.get(f\"{STAC_API_URL}/collections/{collection_name_oco}/items?limit={number_of_items_oco2}\").json()[\"features\"]\nprint(f\"Found {len(items_oco2)} oco2 items\")\n\nnumber_of_items_no2 = get_item_count(STAC_API_URL_veda,collection_name_no2)\nitems_no2 = requests.get(f\"{STAC_API_URL_veda}/collections/{collection_name_no2}/items?limit={number_of_items_no2}\").json()[\"features\"]\nprint(f\"Found {len(items_no2)} no2 items\")\n\nThis makes sense as there are 22 years between 2000 - 2021, with 12 months per year, meaning 264 records in total.\nBelow, we are entering the minimum and maximum values to provide our upper and lower bounds in rescale_values.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#exploring-changes-in-carbon-dioxide-co₂-levels-using-the-raster-api",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#exploring-changes-in-carbon-dioxide-co₂-levels-using-the-raster-api",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Exploring Changes in Carbon Dioxide (CO₂) levels using the Raster API",
    "text": "Exploring Changes in Carbon Dioxide (CO₂) levels using the Raster API\nWe will explore changes in fossil fuel emissions in urban egions. In this notebook, we’ll explore the impacts of these emissions and explore these changes over time. We’ll then visualize the outputs on a map using folium.\n\n# to access the year value from each item more easily, this will let us query more explicity by year and month (e.g., 2020-02)\n# Set the asset values to the appropriate parameter\n\nitems_odiac = {item[\"properties\"][\"start_datetime\"][:7]: item for item in items_odiac} \nasset_name = \"co2-emissions\"\n\nitems_oco2 = {item[\"properties\"][\"datetime\"][:10]: item for item in items_oco2} \nasset_name1 = \"xco2\"\n\nitems_no2 = {item[\"properties\"][\"start_datetime\"][:10]: item for item in items_no2}\n\n\n# Below, we are entering the minimum and maximum values to provide our upper and lower bounds \nrescale_values_odiac = {\"max\":items_odiac[list(items_odiac.keys())[0]][\"assets\"][asset_name][\"raster:bands\"][0][\"histogram\"][\"max\"], \"min\":items_odiac[list(items_odiac.keys())[0]][\"assets\"][asset_name][\"raster:bands\"][0][\"histogram\"][\"min\"]}\nrescale_values_oco2 = {'max':415 , 'min': 412}\nrescale_values_no2 = {'max': 9050373673124971, 'min': 0}\n\nNow we will pass the item id, collection name, and rescaling_factor to the Raster API endpoint. We will do this twice, once for January 2020 and again for January 2000, so that we can visualize each event independently.",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#opening-and-exploring-data-using-the-raster-api",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#opening-and-exploring-data-using-the-raster-api",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Opening and Exploring Data Using the Raster API",
    "text": "Opening and Exploring Data Using the Raster API\nIn this notebook, we will explore the temporal impacts of methane emissions. We will visualize the outputs on a map using ‘folium’.\n\n# Set a colormap for the granule\n# Please refer to matplotlib library if you'd prefer choosing a different color ramp (https://matplotlib.org/stable/users/explain/colors/colormaps.html)\ncolor_map = \"rainbow\" # please select the color ramp from matplotlib library.\n\n# Extract and display the January 2020 tile using the appropriate ID, colormap, rescale values, and datetime (items['2020-01']) \njanuary_2020_tile = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items_odiac['2020-01']['collection']}&item={items_odiac['2020-01']['id']}\"\n    f\"&assets={asset_name}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map}\"\n    f\"&rescale={rescale_values_odiac['min']},{rescale_values_odiac['max']}\", \n).json()\njanuary_2020_tile\n\ncolor_map1 = \"magma\"\n# Extract and display the OCO-2 January 2020 tile using the appropriate ID, colormap, rescale values, and datetime (items['2020-01-20']) \n\noco2_1 = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={items_oco2['2020-01-20']['collection']}&item={items_oco2['2020-01-20']['id']}\"\n    f\"&assets={asset_name1}\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map1}\"\n    f\"&rescale={rescale_values_oco2['min']},{rescale_values_oco2['max']}\", \n).json()\noco2_1\n\n# Extract and display the NO-2 January 2020 tile using the appropriate ID, colormap, rescale values, and datetime (items['2020-01-01']) \n\nno2_1 = requests.get(\n    f\"{RASTER_API_URL_veda}/stac/tilejson.json?collection={items_no2['2020-01-01']['collection']}&item={items_no2['2020-01-01']['id']}\"\n    f\"&assets=cog_default\"\n    f\"&color_formula=gamma+r+1.05&colormap_name={color_map1}\"\n    f\"&rescale={rescale_values_no2['min']},{rescale_values_no2['max']}\", \n).json()\nno2_1",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#define-spatial-region-of-interest",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#define-spatial-region-of-interest",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Define Spatial Region of Interest",
    "text": "Define Spatial Region of Interest\nFor this example, our spatial region of interest (ROI) will be the a region in South Africa.\n\nsa_aoi = {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"coordinates\": [\n          [\n            [\n              25.519052777398997,\n              -24.8470086420499\n            ],\n            [\n              25.519052777398997,\n              -28.145634397543844\n            ],\n            [\n              30.29637465013832,\n              -28.145634397543844\n            ],\n            [\n              30.29637465013832,\n              -24.8470086420499\n            ],\n            [\n              25.519052777398997,\n              -24.8470086420499\n            ]\n          ]\n        ],\n        \"type\": \"Polygon\"\n      }\n    }\n  ]\n}",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-co₂-emissions",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-co₂-emissions",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Visualizing CO₂ emissions",
    "text": "Visualizing CO₂ emissions\n\n\n\nmap_ = folium.Map(location=(-25.943840, 29.789560), zoom_start=7)\n\nmap_layer_2020 = TileLayer(\n    tiles=january_2020_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    name =\"ODIAC\",\n    opacity=0.5,\n)\nmap_layer_2020_2 = TileLayer(\n    tiles=no2_1[\"tiles\"][0],\n    attr=\"GHG\",\n    name = \"NO2\",\n    opacity=0.5,\n)\nsbs = folium.plugins.SideBySideLayers(layer_left=map_layer_2020, layer_right=map_layer_2020_2)\nmap_layer_2020.add_to(map_)\nmap_layer_2020_2.add_to(map_)\n\n# Load the GeoJSON file for South Africa\nfolium.GeoJson(sa_aoi, name=\"South Africa\").add_to(map_)\nsbs.add_to(map_)\nMousePosition().add_to(map_)\n# visualising the map\nmap_\n\n\n\n# Set initial zoom and center of map\nmap_ = folium.Map(location=(-25.943840, 29.789560), zoom_start=7)\n\n# January 2020\nmap_layer_2020_odiac = TileLayer(\n    tiles=january_2020_tile[\"tiles\"][0],\n    attr=\"GHG\",\n    name =\"ODIAC\",\n    opacity=0.5,\n)\nmap_layer_2020_odiac.add_to(map_)\n\n# OCO-2 2020\nmap_layer_2020_oco2 = TileLayer(\n    tiles=oco2_1[\"tiles\"][0],\n    attr=\"GHG\",\n    name = \"OCO2\",\n    opacity=0.5,\n)\nmap_layer_2020_oco2.add_to(map_)\n\n# NO-2 2020\nmap_layer_2020_no2 = TileLayer(\n    tiles=no2_1[\"tiles\"][0],\n    attr=\"GHG\",\n    name = \"NO2\",\n    opacity=0.5,\n)\nmap_layer_2020_no2.add_to(map_)\n\nfolium.GeoJson(sa_aoi, name=\"South Africa\").add_to(map_)\nfolium.LayerControl(collapsed=False,position='bottomleft').add_to(map_)\n\n# visualising the map\nmap_",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-co2-emission",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#generate-statistics-and-time-series-lineplots-for-co2-emission",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Generate Statistics and Time Series Lineplots for CO2 Emission",
    "text": "Generate Statistics and Time Series Lineplots for CO2 Emission\n\n# Check total number of items available\nitems = requests.get(\n    f\"{STAC_API_URL}/collections/{collection_name_odiac}/items?limit={number_of_items}\"\n).json()[\"features\"]\nprint(f\"Found {len(items)} items\")\n\n\n# Explore one item to see what it contains\nitems\n\n\n# the bounding box should be passed to the geojson param as a geojson Feature or FeatureCollection\ndef generate_stats(item, geojson):\n    result = requests.post(\n        f\"{RASTER_API_URL}/cog/statistics\",\n        paragu={\"url\": item[\"assets\"][asset_name][\"href\"]},\n        json=geojson,\n    ).json()['features']\n    return {\n        **result[0][\"properties\"],\n        \"start_datetime\": item[\"properties\"][\"start_datetime\"][:7],\n    }\n\nWith the function above we can generate the statistics for the AOI.\n\n%%time\nstats = [generate_stats(item,sa_aoi) for item in items]\n\n\nstats[0]\n\n\n# Manipulating and cleaning the stats output from the previous cell\ndef clean_stats(stats_json) -&gt; pd.DataFrame:\n    df = pd.json_normalize(stats_json)\n    df.columns = [col.replace(\"statistics.b1.\", \"\") for col in df.columns]\n    df[\"date\"] = pd.to_datetime(df[\"start_datetime\"])\n    return df\n\ndf = clean_stats(stats)\ndf.head(5)",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "href": "sections/use-case-1/odiac-ffco2-monthgrid-v2022_User_Notebook.html#visualizing-the-data-as-a-time-series",
    "title": "Interactive Session: Human Anthropogenic Emissions (ODIAC)",
    "section": "Visualizing the Data as a Time Series",
    "text": "Visualizing the Data as a Time Series\nWe can now explore the ODIAC fossil fuel emission time series available (January 2000 -December 2021) for the Texas, Dallas area of USA. We can plot the data set using the code below:\n\nimport matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(20, 10))\n\n# Set the plot elements \nplt.plot(\n    df[\"date\"],\n    df[\"max\"],\n    color=\"red\",\n    linestyle=\"-\",\n    linewidth=0.5,\n    label=\"Max monthly CO₂ emissions\",\n)\n\n# Set the labels for the X and Y axis and assign a title for the plot \nplt.legend()\nplt.xlabel(\"Years\")\nplt.ylabel(\"CO2 emissions gC/m2/d\")\nplt.title(\"CO2 emission Values for South Africa (2000-2021)\")",
    "crumbs": [
      "Home",
      "Sections",
      "Usecase 1 - Use of Portal Data Toolkit Interfaces and Tools",
      "Interactive Session: Human Anthropogenic Emissions (ODIAC)"
    ]
  },
  {
    "objectID": "sections/us-ghg-center-and-veda/catalog-interaction.html",
    "href": "sections/us-ghg-center-and-veda/catalog-interaction.html",
    "title": "Accessing and using the US GHG Center Data Catalog",
    "section": "",
    "text": "The US GHG Center uses a Spatio-Temporal Asset Catalog (STAC) to catalog it listing of datasets. This tutorial teaches the basics of searching and accessing datasets using the US GHG Center STAC catalog.",
    "crumbs": [
      "Home",
      "Sections",
      "US GHG Center and VEDA / Data Access and Visualization",
      "Accessing and using the US GHG Center Data Catalog"
    ]
  },
  {
    "objectID": "sections/us-ghg-center-and-veda/catalog-interaction.html#approach",
    "href": "sections/us-ghg-center-and-veda/catalog-interaction.html#approach",
    "title": "Accessing and using the US GHG Center Data Catalog",
    "section": "Approach",
    "text": "Approach\n\nUse the pystac_client library to connect to the data catalog\nList all the collections from the catalog\nLook at the items in one of the collections\nAccess an asset in the item\nUse the US GHG Center TiTiler API to visualize the asset",
    "crumbs": [
      "Home",
      "Sections",
      "US GHG Center and VEDA / Data Access and Visualization",
      "Accessing and using the US GHG Center Data Catalog"
    ]
  },
  {
    "objectID": "sections/us-ghg-center-and-veda/catalog-interaction.html#libraries-used",
    "href": "sections/us-ghg-center-and-veda/catalog-interaction.html#libraries-used",
    "title": "Accessing and using the US GHG Center Data Catalog",
    "section": "Libraries Used",
    "text": "Libraries Used\n\nPySTAC Client\nFrom the PySTAC Client Documentation:\n\nThe STAC Python Client (pystac_client) is a Python package for working with STAC Catalogs and APIs that conform to the STAC and STAC API specs in a seamless way.\nPySTAC Client builds upon PySTAC through higher-level functionality and ability to leverage STAC API search endpoints.\n\nWe will use it to interact with the data catalog.\n\n\nRequests\nRequests (requests) is a simple HTTP library. Requests allows you to send HTTP requests extremely easily.\nWe will use it to make API requests.\nHere we import all the required libraries and modules.\n\nimport requests\n\nfrom pystac_client import Client\n\n# For displaying image in a jupyter notebook\nfrom IPython.display import Image, display\n\nLet’s define the data catalog (STAC catalog) API URL\n\n# STAC API root URL\nURL = 'https://ghg.center/api/stac'\n\nUse the pystac_client.Client module to connect to the catalog\n\ncatalog = Client.open(URL)\ncatalog\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Catalog\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"stac-fastapi\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"veda-stac\"\n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 23 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"data\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"conformance\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/conformance\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"STAC/WFS3 conformance classes implemented by this server\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"search\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/search\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"STAC search\"\n        \n    \n            \n        \n            \n                \n        \n            method\n            \"GET\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \n        \n            \n                \n        \n            rel\n            \"search\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/search\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"STAC search\"\n        \n    \n            \n        \n            \n                \n        \n            method\n            \"POST\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/epa-ch4emission-yeargrid-v2express-new\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Gridded annual U.S. anthropogenic methane emissions 2012-2020\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/lpjwsl-wetlandch4-monthgrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Wetland Methane Emissions, LPJ-wsl Model (Monthly)\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/tm54dvar-ch4flux-monthgrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TM5-4DVar Isotopic CH4 Inverse Fluxes\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/gosat-based-ch4budget-yeargrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"GOSAT-based Top-down Methane Budgets.\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            10\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/sedac-popdensity-yeargrid5yr-v4.11\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SEDAC Gridded World Population Data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            11\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/tm54dvar-ch4flux-mask-monthgrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TM5-4DVar Isotopic CH4 Inverse Fluxes\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            12\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/casagfed-carbonflux-monthgrid-v3\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"CASA GFED3 Land Carbon Flux\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            13\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/oco2geos-co2-daygrid-v10r\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"OCO-2 GEOS Assimilated CO2 Concentrations\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            14\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/lpjwsl-wetlandch4-daygrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Wetland Methane Emissions, LPJ-wsl Model (Daily)\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            15\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/epa-ch4emission-yeargrid-v2express\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Gridded annual U.S. anthropogenic methane emissions 2012-2020\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            16\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/emit-ch4plume-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Methane Point Source Plume Complexes\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            17\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/oco2-mip-meanco2budget-yeargrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Pilot top-down CO2 Budget constrained by the v10 OCO-2 MIP Version 1 mean for all the years\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            18\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/oco2-mip-co2budget-yeargrid-v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Pilot top-down CO2 Budget constrained by the v10 OCO-2 MIP Version 1\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            19\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Air-Sea CO2 Flux, ECCO-Darwin Model v5\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            20\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/odiac-ffco2-monthgrid-v2022\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"ODIAC Fossil Fuel CO₂ Emissions\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            21\n            \n        \n            \n                \n        \n            rel\n            \"service-desc\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/openapi.json\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/vnd.oai.openapi+json;version=3.0\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"OpenAPI service description\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            22\n            \n        \n            \n                \n        \n            rel\n            \"service-doc\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/docs\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"OpenAPI service documentation\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            conformsTo\n            [] 16 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://api.stacspec.org/v1.0.0/item-search\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"http://www.opengis.net/spec/cql2/1.0/conf/cql2-text\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#sort\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \"https://api.stacspec.org/v1.0.0/collections\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            \"http://www.opengis.net/spec/ogcapi-features-3/1.0/conf/features-filter\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            \"https://api.stacspec.org/v1.0.0/ogcapi-features\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            \"https://api.stacspec.org/v1.0.0/core\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            10\n            \"http://www.opengis.net/spec/ogcapi-features-3/1.0/conf/filter\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            11\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#filter\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            12\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#query\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            13\n            \"https://api.stacspec.org/v1.0.0-rc.3/item-search#fields\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            14\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#context\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            15\n            \"http://www.opengis.net/spec/cql2/1.0/conf/basic-cql2\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"veda-stac\"\n        \n    \n                \n            \n        \n    \n\n\n\nList all the datasets (collections) in the catalog\n\ncollections = catalog.get_collections()\ncollections = list(collections)\n\n\nfor collection in collections:\n    # print(f\"&gt;&gt; {collection.id}: \\n- {collection.description}\\n\")\n    \n    print(\"&gt;&gt; \" + collection.id)\n    print(\"- \" + collection.description + \"\\n\")\n\n&gt;&gt; epa-ch4emission-yeargrid-v2express-new\n- This gridded dataset represents an update to the original version 1 of the gridded GHGI from Maasakkers, et al., (2016). The annual files contain one year of emissions per source category but include a time dimension to make them suitable (COARDS-compliant) for atmospheric models. This main dataset also includes monthly source-specific methane emission scaling factors for those select sources with strong interannual variability.\n\n&gt;&gt; lpjwsl-wetlandch4-monthgrid-v1\n- Wetland methane emissions produced by the Lund–Potsdam–Jena Dynamic Global Vegetation Model (LPJ-DGVM) Wald Schnee und Landscaft version (LPJ-wsl). LPJ-wsl is a prognostic model used to simulate future changes in wetland emissions and independently verified with remote sensing data products. The LPJ-wsl model is regularly used in conjunction with NASA’s GEOS model to simulate the impact of wetlands and other methane sources on atmospheric methane concentrations.\n\n&gt;&gt; tm54dvar-ch4flux-monthgrid-v1\n- Global, monthly 1 degree resolution methane emission estimates from microbial, fossil and pyrogenic sources derived using inverse modeling, version 1.\n\n&gt;&gt; gosat-based-ch4budget-yeargrid-v1\n- Annual methane emissions gridded globally at 1° resolution for 2019, version.\n\n&gt;&gt; sedac-popdensity-yeargrid5yr-v4.11\n- The Gridded Population of the World, Version 4 (GPWv4): Population Density, Revision 11 consists of estimates of human population density (number of persons per square kilometer) based on counts consistent with national censuses and population registers, for the years 2000, 2005, 2010, 2015, and 2020. \n\n&gt;&gt; tm54dvar-ch4flux-mask-monthgrid-v1\n- Global, monthly 1 degree resolution methane emission estimates from microbial, fossil and pyrogenic sources derived using inverse modeling, version 1.\n\n&gt;&gt; casagfed-carbonflux-monthgrid-v3\n- This product provides Monthly average Net Primary Production (NPP), heterotrophic respiration (Rh), wildfire emissions (FIRE), and fuel wood burning emissions (FUEL) derived from the Carnegie-Ames-Stanford-Approach – Global Fire Emissions Database version 3 (CASA-GFED3) model.\n\n&gt;&gt; oco2geos-co2-daygrid-v10r\n- Daily, global 0.5 x 0.625 degree assimilated CO2 concentrations derived from OCO-2 satellite data, version 10r\n\n&gt;&gt; lpjwsl-wetlandch4-daygrid-v1\n- Wetland methane emissions produced by the Lund–Potsdam–Jena Dynamic Global Vegetation Model (LPJ-DGVM) Wald Schnee und Landscaft version (LPJ-wsl). LPJ-wsl is a prognostic model used to simulate future changes in wetland emissions and independently verified with remote sensing data products. The LPJ-wsl model is regularly used in conjunction with NASA’s GEOS model to simulate the impact of wetlands and other methane sources on atmospheric methane concentrations.\n\n&gt;&gt; epa-ch4emission-yeargrid-v2express\n- This gridded dataset represents an update to the original version 1 of the gridded GHGI from Maasakkers, et al., (2016). The annual files contain one year of emissions per source category but include a time dimension to make them suitable (COARDS-compliant) for atmospheric models. This main dataset also includes monthly source-specific methane emission scaling factors for those select sources with strong interannual variability.\n\n&gt;&gt; emit-ch4plume-v1\n- Methane plume complexes from point source emitters\n\n&gt;&gt; oco2-mip-meanco2budget-yeargrid-v1\n- National CO2 Budgets (2015-2020) inferred from atmospheric CO2 observations in support of the Global Stocktake\n\n&gt;&gt; oco2-mip-co2budget-yeargrid-v1\n- National CO2 Budgets (2015-2020) inferred from atmospheric CO2 observations in support of the Global Stocktake\n\n&gt;&gt; eccodarwin-co2flux-monthgrid-v5\n- Global, monthly average air-sea CO2 flux at ~1/3° resolution from 2020 to 2022\n\n&gt;&gt; odiac-ffco2-monthgrid-v2022\n- The Open-Data Inventory for Anthropogenic Carbon dioxide (ODIAC) is a high-spatial resolution global emission data product of CO₂ emissions from fossil fuel combustion (Oda and Maksyutov, 2011). ODIAC pioneered the combined use of space-based nighttime light data and individual power plant emission/location profiles to estimate the global spatial extent of fossil fuel CO₂ emissions. With the innovative emission modeling approach, ODIAC achieved the fine picture of global fossil fuel CO₂ emissions at a 1x1km.\n\n\n\nPick a collection to interact with. Let’s pick eccodarwin-co2flux-monthgrid-v5. This dataset represents the Air-Sea CO₂ flux, estimated using the ECCO (Estimating the Circulation and Climate of the Ocean) Darwin model.\nRead more about the dataset in the GHG Center Web Portal: https://earth.gov/ghgcenter/data-catalog/eccodarwin-co2flux-monthgrid-v5\n\ncollection = catalog.get_collection(\"eccodarwin-co2flux-monthgrid-v5\")\ncollection\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Collection\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"Global, monthly average air-sea CO2 flux at ~1/3° resolution from 2020 to 2022\"\n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"items\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5/items\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"veda-stac\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            item_assets\n            \n        \n            \n                \n        \n            co2\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"layer\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Air-Sea CO2 Flux\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Monthly mean air-sea CO2 Flux (negative into ocean)\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            dashboard:is_periodic\n            True\n        \n    \n                \n            \n                \n                    \n        \n            dashboard:time_density\n            \"month\"\n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"Air-Sea CO2 Flux, ECCO-Darwin Model v5\"\n        \n    \n                \n            \n                \n                    \n        \n            extent\n            \n        \n            \n                \n        \n            spatial\n            \n        \n            \n                \n        \n            bbox\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.12483215332031\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            89.87517547607422\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            temporal\n            \n        \n            \n                \n        \n            interval\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"2020-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"2022-12-31T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            license\n            \"CC-BY-4.0\"\n        \n    \n                \n            \n                \n                    \n        \n            summaries\n            \n        \n            \n                \n        \n            datetime\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"2020-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"2022-12-31T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n        \n    \n\n\n\nLet’s look at the items within the collection, using the CollectionClient.get_items method\n\n# get_items\nitems = list(collection.get_items())\n\n\nfor item in items[:10]:\n    print(item)\n\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202212&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202211&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202210&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202209&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202208&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202207&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202206&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202205&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202204&gt;\n&lt;Item id=eccodarwin-co2flux-monthgrid-v5-202203&gt;\n\n\n\nitem = collection.get_item(items[0].id)   # item = collection.get_item(\"eccodarwin-co2flux-monthgrid-v5-202212\")\nitem\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Feature\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"eccodarwin-co2flux-monthgrid-v5-202212\"\n        \n    \n                \n            \n                \n                    \n        \n            properties\n            \n        \n            \n                \n        \n            end_datetime\n            \"2022-12-31T00:00:00+00:00\"\n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2022-12-01T00:00:00+00:00\"\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            89.875173370319\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            89.875173370319\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5/items/eccodarwin-co2flux-monthgrid-v5-202212\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://ghg.center/api/stac/collections/eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Air-Sea CO2 Flux, ECCO-Darwin Model v5\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            co2\n            \n        \n            \n                \n        \n            href\n            \"s3://ghgc-data-store/eccodarwin-co2flux-monthgrid-v5/ECCO-Darwin_CO2_flux_202212.tif\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Air-Sea CO2 Flux\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Monthly mean air-sea CO2 Flux (negative into ocean)\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            89.875173370319\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326.0\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            721.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            1440.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            raster:bands\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            scale\n            1.0\n        \n    \n            \n        \n            \n                \n        \n            offset\n            0.0\n        \n    \n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float64\"\n        \n    \n            \n        \n            \n                \n        \n            histogram\n            \n        \n            \n                \n        \n            max\n            1e+20\n        \n    \n            \n        \n            \n                \n        \n            min\n            -0.0560546528687938\n        \n    \n            \n        \n            \n                \n        \n            count\n            11.0\n        \n    \n            \n        \n            \n                \n        \n            buckets\n            [] 10 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            338606.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            186706.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            statistics\n            \n        \n            \n                \n        \n            mean\n            3.554192556042885e+19\n        \n    \n            \n        \n            \n                \n        \n            stddev\n            4.786401658343999e+19\n        \n    \n            \n        \n            \n                \n        \n            maximum\n            1e+20\n        \n    \n            \n        \n            \n                \n        \n            minimum\n            -0.0560546528687938\n        \n    \n            \n        \n            \n                \n        \n            valid_percent\n            0.0001903630604288499\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            89.875173370319\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            89.875173370319\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:projjson\n            \n        \n            \n                \n        \n            id\n            \n        \n            \n                \n        \n            code\n            4326.0\n        \n    \n            \n        \n            \n                \n        \n            authority\n            \"EPSG\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            name\n            \"WGS 84\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"GeographicCRS\"\n        \n    \n            \n        \n            \n                \n        \n            datum\n            \n        \n            \n                \n        \n            name\n            \"World Geodetic System 1984\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"GeodeticReferenceFrame\"\n        \n    \n            \n        \n            \n                \n        \n            ellipsoid\n            \n        \n            \n                \n        \n            name\n            \"WGS 84\"\n        \n    \n            \n        \n            \n                \n        \n            semi_major_axis\n            6378137.0\n        \n    \n            \n        \n            \n                \n        \n            inverse_flattening\n            298.257223563\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            $schema\n            \"https://proj.org/schemas/v0.4/projjson.schema.json\"\n        \n    \n            \n        \n            \n                \n        \n            coordinate_system\n            \n        \n            \n                \n        \n            axis\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Geodetic latitude\"\n        \n    \n            \n        \n            \n                \n        \n            unit\n            \"degree\"\n        \n    \n            \n        \n            \n                \n        \n            direction\n            \"north\"\n        \n    \n            \n        \n            \n                \n        \n            abbreviation\n            \"Lat\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Geodetic longitude\"\n        \n    \n            \n        \n            \n                \n        \n            unit\n            \"degree\"\n        \n    \n            \n        \n            \n                \n        \n            direction\n            \"east\"\n        \n    \n            \n        \n            \n                \n        \n            abbreviation\n            \"Lon\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            subtype\n            \"ellipsoidal\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.25\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.24965325936199723\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            89.875173370319\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"layer\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -180.125\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90.124826629681\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            179.875\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            89.875173370319\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            collection\n            \"eccodarwin-co2flux-monthgrid-v5\"\n        \n    \n                \n            \n        \n    \n\n\n\n\nasset = item.assets[\"co2\"].href\nasset\n\n's3://ghgc-data-store/eccodarwin-co2flux-monthgrid-v5/ECCO-Darwin_CO2_flux_202212.tif'\n\n\nVisualize this asset using TiTiler\n\n# Define the TiTiler url\nTITILER_URL = \"https://ghg.center/api/raster\"\n\n\n# TiTiler preview endpoint\ncog_preview = f\"/cog/preview.png?url={asset}&rescale=-0.0007,0.0002&colormap_name=bwr\"\n\nUser requests.get to make a GET request for the preview\n\nresponse = requests.get(f\"{TITILER_URL}{cog_preview}\") #https://ghg.center/api/raster/cog/preview.png?url=s3://ghgc-data-store/eccodarwin-co2flux-monthgrid-v5/ECCO-Darwin_CO2_flux_202212.tif&rescale=-0.0007,0.0002&colormap_name=bwr\nresponse\n\n&lt;Response [200]&gt;\n\n\n\ndisplay(Image(response.content))\n\n\n\n\n\n\n\n\n\nSearching for datasets based on the Area of Interest (AOI) and/or datetime\n\n# Rought AOI for Baltimore, MD area\nbaltimore_aoi = {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n      [\n        [\n          -76.7413596126004,\n          39.37730408865011\n        ],\n        [\n          -76.7413596126004,\n          39.20129583511198\n        ],\n        [\n          -76.47249934044682,\n          39.20129583511198\n        ],\n        [\n          -76.47249934044682,\n          39.37730408865011\n        ],\n        [\n          -76.7413596126004,\n          39.37730408865011\n        ]\n      ]\n    ],\n}\n\n\n# Search the catalog for the given collection, aoi and datetime\nsearch = catalog.search(\n    max_items = 100,\n    # limit = 5,\n    collections = \"epa-ch4emission-yeargrid-v2express\",\n    intersects = baltimore_aoi,\n    datetime = \"2012-04-01/2015-12-31\",\n)\nitems = list(search.item_collection())\n\nlen(items)\n\n100\n\n\n\nitems[:5]\n\n[&lt;Item id=oco2geos-co2-daygrid-v10r-20151231&gt;,\n &lt;Item id=lpjwsl-wetlandch4-daygrid-v1-20151231&gt;,\n &lt;Item id=oco2geos-co2-daygrid-v10r-20151230&gt;,\n &lt;Item id=lpjwsl-wetlandch4-daygrid-v1-20151230&gt;,\n &lt;Item id=oco2geos-co2-daygrid-v10r-20151229&gt;]",
    "crumbs": [
      "Home",
      "Sections",
      "US GHG Center and VEDA / Data Access and Visualization",
      "Accessing and using the US GHG Center Data Catalog"
    ]
  },
  {
    "objectID": "sections/us-ghg-center-and-veda/catalog-interaction.html#summary",
    "href": "sections/us-ghg-center-and-veda/catalog-interaction.html#summary",
    "title": "Accessing and using the US GHG Center Data Catalog",
    "section": "Summary",
    "text": "Summary\nIn this notebook, we used the pystac_client library to interact with the US GHG Center Data Catalog. We learned how to list all the datasets, list all the items in a dataset, read the metadata for the dataset/items, access the data file, visualize it and finally search the catalog for specific area of interest and datetime.",
    "crumbs": [
      "Home",
      "Sections",
      "US GHG Center and VEDA / Data Access and Visualization",
      "Accessing and using the US GHG Center Data Catalog"
    ]
  }
]